afk {
    kickreason="Вы были кикнуты за AFK."
}
args {
    boundedinteger {
        nonumber="&cАргумент должен быть числом."
        outofbounds="&cЧисло должно быть между {0} и {1}."
    }
    catalogtype {
        nomatch="&c{0} - не правильный аргумент."
    }
    difficulty {
        notfound="&cСложность {0} не существует."
    }
    dimensiontype {
        notfound="&cТип измерения {0} не существует."
    }
    explevel {
        error="&cАргумент должен быть с префиксом \"l\" или \"lv\"."
    }
    gamemode {
        error="&e\"{0}\" - не режим игры."
    }
    gameprofile {
        format="&cИмя не правильного формата."
        none="&cНет пользователей с именем {0}."
    }
    home {
        nohome="&cДом \"{0}\" не существует."
    }
    homeother {
        ambiguous="&cНевозможно узнать уникальное имя"
        exempt="&cУ игрока это отключено."
        notenough="&cИгрок и дом должны быть указаны."
    }
    info {
        noinfo="&cНет страницы \"{0}\"."
    }
    itemarg {
        nomatch="&cНет алиасов или ID \"{0}\"."
        orphanedarg="&cАлиас \"{0}\" указывает на ID \"{1}\" которого больше нет на сервере."
    }
    jail {
        nojail="&cТюрьма не существует."
    }
    kit {
        noexist="&cЭтот набор не существует."
        noname="&cПожалуйста, укажите название."
        noperms="&cУ вас нет прав на этот набор."
    }
    mailfilter {
        player="&cНевозможно найти игрока {0}."
    }
    message {
        none="&cСообщение не было указано."
    }
    name {
        warpname="Название точки"
    }
    note {
        indexnotnumber="&cID должен быть числом."
        noindex="&cУкажите ID, проверьте его &4/notes {0}."
        nonotedata="&cID &4{0} &cне существует, проверьте &4/notes {1}."
        nouser="&cПользователь &4{0} &cне существует."
        nouserarg="&cПользователь должен быть указан."
        nousernotes="&cУ игрока &4{0} &cнет записей."
    }
    permission {
        deny="&cУ вас нет прав на аргумент {0}."
    }
    permissiongroup {
        failed="&cНевозможно получить список групп."
        nogroup="&cГруппа \"{0}\" не существует."
        noservice="&cПлагин на права не установлен."
    }
    playerconsole {
        noexist="&cЭтот игрок не существует. Используйте \"-\" для консоли."
        nouser="&cПользователь {0} не существует. Используйте \"-\" для консоли."
    }
    positiveint {
        negative="&cАргумент должен быть положительным числом."
        zero="&cThe argument cannot be zero."
    }
    selector {
        notarget="&cThere were no valid targets chosen by this selector."
    }
    timespan {
        incorrectformat="&cCould not parse \"{0}\" - must use w, d, h, m and/or s in that order."
        notime="&cNo time was specified"
    }
    twoplayer {
        noexist="&cThe player {0} is not online."
        notenough="&cTwo players are required."
    }
    user {
        none="&cA user was not supplied."
        nouser="&cCould not find user with the name \"{0}\"."
        nouserfuzzy="&cCould not find user with the name \"{0}\" (at least 3 letters are required for partial name checks)."
        toomany="&cToo many users that start with the name \"{0}\" were found."
    }
    uuid {
        notvalid {
            malformed="&cThat is not a valid UUID."
            nomatch="&cThat UUID is not valid for this command."
        }
    }
    warning {
        indexnotnumber="&cThe warning ID must be a number."
        noindex="&cSpecify the warning ID, check the ID in &4/warnings {0}."
        nouser="&cThe user &4{0} &cdoes not exist."
        nouserarg="&cA user to remove warnings from must be specified."
        nouserwarnings="&cThe user &4{0} &cdoes not have any warnings."
        nowarndata="&cThe warning ID &4{0} &cdoes not exist, check again in &4/warnings {1}."
    }
    warpcategory {
        noexist="&cThe warp category {0} does not exist."
    }
    warps {
        maxselect="&c\"{0}\" returns too many warps. Try adding more characters before tab completing"
        noexist="&cThat warp does not exist."
        noperms="&cYou do not have permissions to warp there."
        notavailable="&cThat warp is not available right now."
    }
    weather {
        noexist="&cThe weather must be one of {0}."
    }
    worldproperties {
        default="&eNo world was specified - the default was used."
        loaded="&cThe world &e{0} &cmust be unloaded before you can use this command."
        noexist="&cThe world &e{0}&c does not exist."
        noexistdisabled="&cThe world &e{0}&c must be disabled before you use this command."
        notloaded="&cThe world &e{0} &cmust be loaded before you can use this command."
    }
    worldtime {
        "12herror"="&cHour out of range, it must be between 1 and 12."
        "24herror"="&cHour out of range, it must be between 0 and 23."
        error="&cCould not determine the world time from the input {0}."
        ticks="&cTicks out of range, it must be between 0 and 23999."
    }
}
ban {
    defaultreason="The BanHammer has spoken!"
}
broadcast {
    tag="&a[Broadcast]"
}
chat {
    command {
        click="Click here to run the command &b&o{0}"
        clicksuggest="Click here to put the command &b&o{0} &rinto your chat box."
    }
    templates {
        timeout="Could not retrieve parent groups for {0} in time. Consider turning group templates off, or using \"nucleus.chat.group\" permission options only."
    }
    url {
        click="Click here to open the URL &b&o{0} &rin your web browser."
        malformed="Unable to parse the URL {0}, it will not be clickable."
    }
}
chatlog {
    chat="[Chat] {0}: {1}"
    mail="[Mail] {0} -> {1}: {2}"
    message="[Message] {0} -> {1}: {2}"
}
command {
    afk {
        exempt="&cYou are currently exempted from going AFK."
        from {
            vanish="&eYou have returned from AFK, but you are currently vanished, so this has not been broadcasted."
        }
        notset="&cCould not set your AFK status."
        to {
            vanish="&eYou have gone AFK, but you are currently vanished, so this has not been broadcasted."
        }
    }
    afkkick {
        nokick="&cThere are currently no AFK players who are eligible to be kicked. "
        success="&aKicked {0} players who were AFK. "
    }
    afkrefresh {
        complete="&aInvalidated cached AFK permissions."
    }
    back {
        cancelled="&cCannot return you to your previous location, teleport was cancelled."
        noloc="&cThere is no location set for you to teleport back to."
        nosafe="&cCannot return you to your previous location safely."
        success="&aReturned you to your previous location."
    }
    ban {
        alreadyset="&e{0} &chas already been banned."
        applied="&e{0} &awas banned by &e{1}&a."
        exempt="&cThe user &4{0} &cis exempt from being banned."
        offline {
            noperms="&cYou do not have permission to ban offline players."
        }
        profileerror="&cUnable to get the profile for {0} from Mojang."
    }
    blockinfo {
        id="&aBlock ID: &e{0}&a. Block name: &e{1}&a."
        list {
            header="&aBlock Info - &ex:{0} y:{1} z:{2}"
        }
        none="&cNo block was found at the target location."
        player="&cYou must add the co-ordinates of the target block to inspect."
        property {
            item="&aProperty: &e{0}&a. Value: &e{1}&a."
        }
        traits {
            item="&aTrait: &e{0}&a. Value: &e{1}&a."
        }
    }
    blockzap {
        alreadyair="&cThe block at &e{0} &cin the world &e{1}&c is already air."
        fail="&cCould not zap the block at &e{0}&c in the world &e{1}&c."
        success="&aSuccessfully zapped the block &e{2} &aat &e{0}&a in the world &e{1}&a."
    }
    checkban {
        bannedfor="&e{0} &awas banned by &e{1}. This will expire in &e{2}&a."
        bannedperm="&e{0} &awas banned by &e{1}."
        created="&aIssued: &f{0}"
        notset="&e{0} &ais not banned."
    }
    checkjail {
        created="&aJailed: &f{0}"
        jailedfor="&e{0} &awas jailed in jail \"&e{1}&a\" by &e{2}. They will be unjailed in &e{3}&a."
        jailedperm="&e{0} &awas jailed in jail \"&e{1}&a\" by &e{2}."
        nojail="&aThe player &e{0} &ais not in jail."
    }
    checkjailed {
        header="&aPlayers jailed in &e{0}&a."
        hover="Click to display more information about this jailing."
        none="&aThere is no one in &e{0}&a."
    }
    checkmute {
        created="&aIssued: &e{0} "
        mutedfor="&e{0} &awas muted by &e{1} &afor &e{2}."
        mutedperm="&e{0} &awas muted by &e{1}."
        none="&e{0} &ais not muted."
    }
    checkmuted {
        header="&aMuted players."
        hover="Click here to see more information about this muting."
        none="&aNo one is currently muted."
    }
    checknotes {
        action="&6Action"
        date="&6Date noted: &e{0}"
        header="{0}'s notes"
        hover {
            check="&aClick here to view more details about this note."
            delete="&cClick here to delete this note."
            return="&aClick here to return to this users list of notes."
        }
        id="&6ID: &e{0}"
        info="&2Click on the noter's name for more information!"
        none="&e{0} &ahas no notes."
        note="&6Note: &e{0}"
        noter="&6Noted by: &e{0}"
    }
    checkwarnings {
        action="&6Action"
        date="&6Date warned: &e{0}"
        header="{0}'s warnings"
        hover {
            check="&aClick here to view more details about this warning."
            delete="&cClick here to delete this warning."
            expire="&eClick here to expire this warning."
            return="&aClick here to return to this users list of warnings."
        }
        id="&6ID: &e{0}"
        info="&2Click on the warner's name for more information!"
        none="&e{0} &ahas no warnings."
        remaining="&6Time remaining: &e{0}"
        warner="&6Warned by: &e{0}"
        warning="&6Warning: &e{0}"
    }
    child {
        notloaded="Could not load the child command {0}."
    }
    clearinventory {
        cancelled="&cCould not clear inventory of player &e{0}&c, event was cancelled. "
        offlinenotsupported="&cOffline player /clearinventory is not available in Sponge yet."
        success="&aCleared inventory of player &e{0}&a."
    }
    clearnotes {
        failure="&aNotes for &e{0} &acould not be cleared."
        success="&aNotes for &e{0} &ahave been cleared."
    }
    clearwarnings {
        all="&aAll warnings for &e{0} &ahave been cleared."
        expired="&aAll expired warnings for &e{0} &ahave been cleared."
        failure="&aWarnings for &e{0} &acould not be cleared."
        remove="&aAll active warnings for &e{0} &ahave been cleared."
        success="&aAll active warnings for &e{0} &ahave been expired."
    }
    commandblockonly="&cThis command can only be executed by command blocks."
    commandinfo {
        aliases="&eAliases: &f{0}"
        callable="Low Level Command"
        class="&eCommand Class: &f{0}"
        description="&eDescription:"
        execclass="&eExecutor Class: &f{0}"
        haschildren="&eThis command has child commands"
        nocommand="Invalid command: \"{0}\""
        noinfo="&cCould not retrieve usage information about this command"
        nucleus="Nucleus Command"
        owner="&eOwner: &f{0}"
        shortdescription="&eShort Description:"
        spec="High Level Command"
        title="&eCommand Info: &f/{0}"
        type="&eCommand Type: &f{0}"
        usage="&eUsage:"
    }
    commandspy {
        success="&aYou have now {0} Command Spy."
    }
    consoleonly="&cThis command can only be executed by the console."
    crafting {
        error="&cCould not open the requested crafting window."
    }
    delnick {
        success {
            base="&aYour nickname was removed."
            other="&e{0}&a's nickname was removed."
        }
    }
    economyrequired="&cAn economy is required for this command to work, no compatible plugins are installed."
    enchant {
        error="&cUnable to enchant the item in your hand with &e{0} &clevel &e{1}."
        noenchantment="&cThe enchantment &e{0} &cdoes not exist on the item in your hand."
        noitem="&cYou must be holding an item to enchant it."
        nounsafe {
            enchant="&cThis enchantment cannot normally be applied to {0}. Add \"-u\" to your command to add it anyway."
            level="&cThis level cannot be applied to {0} safely. Add \"-u\" to your command to add it anyway."
        }
        overwrite="&cThe enchantments &e{0} &cwould be removed if you applied this enchantment. Add \"-o\" to your command if you intend for this to happen."
        removesuccess="&e{0} &ahas been removed from the item in your hand."
        success="&e{0} &alevel &e{1} &ahas been applied to the item in your hand."
    }
    enderchest {
        nooffline="&cCannot load offline player's ender chests. Update Sponge to enable this functionality."
        readonly="Ender Chest (Read Only)"
        targetexempt="{0} &cis exempt from having their ender chest inspected."
    }
    entityinfo {
        id="&aEntity type ID: &e{0}&a. Entity type name: &e{1}&a."
        key="&aData Key: &e{0}&a. Value: &e{1}&a."
        list {
            header="&aEntity Info - &ex:{0} y:{1} z:{2}"
        }
        none="&cNo entity was found ahead of you."
        uuid="&aEntity UUID: &e{0}"
    }
    error="&cAn error occurred trying to perform that command."
    exception {
        fromcommand="&c&oException from &e/{0}"
        multiple="&cThere were multiple errors executing this command:"
        nomoreinfo="&cThere was an error executing this command: no more information was given."
        separator="&c-----------"
        subcommands="&cSubcommands: &e{0}"
        unexpected="&cUnexpected error running this command: {0}"
        usage="&cUsage: &e{0}"
    }
    exp {
        gamemode="&cCannot set experience of a player in creative or spectator modes."
        info="&e{0} &ahas &e{1} &aexperience point(s), and is at level &e{2}&a."
        set {
            error="&cCould not set experience level."
            new {
                other="&e{0} &anow has &e{1} &aexperience points (level &e{2}&a)."
                self="&aYou now have &e{0}&a experience points (level &e{1}&a)."
            }
        }
    }
    extinguish {
        fail="&cCould not extinguish {0}"
        success="&aExtinguished {0}"
    }
    feed {
        error="&cThe feeding could not be completed."
        success {
            other="&aYou have fed &e{0}&a."
            self="&aYou have been fed."
        }
    }
    file {
        load="&cCould not load user information."
    }
    firstkit {
        clear {
            success="&aNew players will no longer receive items when they first join the server."
        }
        list {
            commandsub="&b&lCommands"
            itemsub="&b&lItems"
            nocommands="&aNo commands are executed when a player first joins the server."
            none="&aPlayers receive no items when they first join the server."
            title="&aFirst join kit contents"
            unable="&c{0} items could not be loaded into the kit."
        }
        redeem {
            reject="&c{0} items were not added to your inventory - possibly because it was full."
            success="&aRedeemed the first join kit."
        }
        set {
            success="&aNew players will now receive the current contents of your inventory."
        }
    }
    firstspawn {
        fail="&cCould not warp you to the first time spawn point safely. Ask an administrator to set a safe first spawn point."
        notset="&cThe first-time spawn point has not been set."
        success="&aYou have warped to the first-time spawn point."
    }
    fly {
        error="&cCould not set fly status."
        off="&aYou are no longer able to fly."
        on="&aYou are now able to fly."
        player {
            off="&aFly mode has been disabled for &e{0}."
            on="&aFly mode has been enabled for &e{0}."
        }
    }
    freezeplayer {
        success {
            frozen="{0} &ahas been frozen in place."
            unfrozen="{0} &ahas now been unfrozen and can move."
        }
    }
    gamemode {
        error="&cUnable to set the game mode for {0}."
        get {
            base="&aYour game mode is currently &e{0}&a."
            other="&e{0}'s &agame mode is currently &e{1}&a."
        }
        permission="&cYou do not have permission to switch to the &e{0}&c gamemode."
        set {
            base="&aYour game mode was set to &e{0}&a."
            other="&e{0}'s &agame mode was set to &e{1}&a."
        }
    }
    generalerror {
        handempty="&cYou must be holding an item to use this command."
    }
    geoip {
        update {
            complete="& aUpdate GeoIP базы данных завершена."
            licence="& cYou должны принять лицензия модуля GeoIP в главной конфигурации файла перед загрузкой IP местоположение баз данных."
            start="& aStarting скачать GeoIP баз данных."
        }
    }
    getfromip {
        hover="Click here to run &e/nucleus:seen &ffor this player."
        notvalid="&cThat is not a valid IP address."
        nousers="&aThere are no users associated with that IP address."
        title="&eUsers last seen from {0}"
    }
    getpos {
        hover="Click here to warp to this location."
        location {
            nolocation="&cCannot get last location for the player &r{0}&c."
            other="{0}'s &alocation - &eworld \"{1}\": {2}, {3}, {4}."
            self="&aYour location - &eworld \"{0}\": {1}, {2}, {3}."
        }
    }
    globalmute {
        broadcast {
            disabled="&eThe server is no longer muted."
            enabled="&eThe server has been muted. Only those with permission may now speak."
        }
        status="&aGlobal mute is has been {0}."
    }
    god {
        error="&cCould not set invulnerability status."
        off="&aYou are no longer invulnerable."
        on="&aYou are now invulnerable."
        player {
            off="&aInvulnerability has been disabled for &e{0}&a."
            on="&aInvulnerability has been enabled for &e{0}&a."
        }
    }
    hat {
        success="&aSet hat of &r{0}&a to {1}."
        successself="&aYou are now wearing a &r{0}."
    }
    heal {
        error="&cThe healing could not be completed."
        success {
            other="&aYou have healed &e{0}&a."
            self="&aYou have been healed."
        }
    }
    helpop {
        success="&aYour message was sent."
    }
    home {
        delete {
            fail="&cCouldn't delete a home named &e{0}&c."
            other {
                fail="&cCouldn't delete &e{0}&c's home named &e{1}&c."
                success="&aYou deleted &e{0}&a's home \"&e{1}&a\"."
            }
            success="&aYou deleted the home &e{0}&a."
        }
        fail="&cUnable to warp to home \"&e{0}&c\"."
        invalid="&cThe home \"&e{0}&c\" does not point to a valid location."
        limit {
            other="{0} &ahas set {1} of {2} homes."
            otheru="{0} &ahas set {1} of effectively unlimited  homes."
            self="&aYou have set {0} of {1} homes."
            selfu="&aYou have set {0} of effectively unlimited homes."
        }
        nohomes="&cThere are no homes to display."
        overhang="&cYou cannot warp to your home because you have too many set - you are entitled to &e{0}&c, but you have &e{1}&c. Delete homes using &e/delhome."
        success="&aWarped to home \"&e{0}&a\" successfully."
        successdefault="&aWarped to the default home successfully."
    }
    homeother {
        fail="&cUnable to warp to {0}'s home \"&e{1}&c\"."
        invalid="&c{0}'s home \"&e{1}&c\" does not point to a valid location."
        success="&aWarped to &e{0}&a's home \"&e{1}&a\" successfully."
    }
    ignite {
        error="&cAn error occurred while setting player {0} on fire."
        gamemode="&cCannot set {0} on fire as they are in creative or spectator modes."
        success="&aSet player {0} on fire for {1} ticks."
    }
    ignore {
        added="&e{0} &awas added to your ignore list."
        exempt="&cYou cannot ignore the user {0}."
        remove="&e{0} &awas removed from your ignore list."
        self="&cYou cannot ignore yourself."
    }
    ignorelist {
        header="&eIgnored players for &f{0}"
        noignores {
            other="{0}&e does not ignore anyone"
            self="&eYou do not ignore anyone"
        }
        unknown="&cUnknown UUID: {0}"
    }
    info {
        header {
            default="&bClick on a title to view that section."
        }
        hover="Click here or run \"/info {0}\" to read the section \"{0}\"."
        none="&6There are no info pages for this server."
        title {
            default="&6Info"
            section="&6Info: {0}"
        }
    }
    invsee {
        failed="&cCould not inspect target inventory."
        nooffline="&cYou cannot inspect offline player's inventories."
        offlinenotsupported="&cOffline player /invsee is not available in Sponge yet."
        self="&cYou cannot inspect your own inventory with this command."
        targetexempt="&cThe player &f{0} &cis exempt from having their inventory inspected."
    }
    itembuy {
        clickhere="&b&nClick here to accept this."
        maximum="&cThe maximum number of items you can buy at once is &e{0}&c."
        nofunds="&cYou do not have the funds to buy this."
        notforsale="&cThat item is not for sale."
        summary="&bYou can buy &e{0} {1} &bfor &e{2}&b."
        transactionpartial="&cDue to lack of inventory space, &e{0} {1} &cwere not bought."
        transactionsuccess="&aYou have bought &e{0} {1}&a for &e{2}&a."
    }
    iteminfo {
        buyprice="&aPlayers can buy for &e{0}"
        extendedid="&aExtended ID: &e{0}"
        id="&aItem ID: &e{0}&a. Item name: &e{1}&a."
        invalidblockstate="&cThat block state does not have an item associated with it."
        key="&aData Key: &e{0}&a. Value: &e{1}&a."
        list {
            aliases="&bItem Aliases"
            header="&aItem Info"
        }
        none="&cYou must be holding the item you wish to inspect."
        sellprice="&aPlayers can sell for &e{0}"
    }
    itemname {
        clear {
            fail="&cUnable to clear the name on the item."
            noitem="&cYou must be holding the item you wish to clear the name of."
            none="&cNo name to clear on the item in your hand."
            success="&aCleared the name on the item in your hand."
        }
        set {
            fail="&cCould not update the display name on the item in your hand."
            noitem="&cYou must be holding the item you wish to set the name of."
            success="&aThe display name has been updated on the item in your hand."
        }
    }
    itemsell {
        error="&cThere was an error selling your &e{0}&c."
        notforselling="&cThat item cannot be sold to the server."
        summary="&bYou have sold &e{0} {1} &bfor &e{2}&b."
    }
    itemsellall {
        none="&cYou do not have any &e{0} &cin your inventory to sell."
        summary="&bYou have &e{0} {1} &bworth &e{2}&b. If you want to continue selling this, click this message or run &e/itemsellall -a {3}&b."
    }
    jail {
        error="&cUnable to jail the player."
        exempt="&cThe user &4{0} &cis exempt from being jailed."
        info {
            location="&aLocation"
            name="&aJail Name"
        }
        jail {
            nojail="&cYou must specify a jail!"
        }
        jailedfor="&cYou were jailed in jail \"&e{0}&c\" by &e{1} &cfor &e{2}&c."
        jailedperm="&cYou were jailed in jail \"&e{0}&c\" by &e{1}."
        offline {
            noperms="&cYou do not have permission to jail offline players."
        }
        reason="You have been jailed!"
        unjail {
            fail="&cCould not unjail &e{0}&c."
            perm="&cYou do not have permission to unjail players."
            success="&e{0} &ahas been unjailed."
        }
    }
    jails {
        del {
            error="&cUnable to delete the jail &e{0}&c."
            success="&aThe jail &e{0} &awas deleted."
        }
        list {
            header="&aJail List"
        }
        nojails="&cThere are no jails."
        set {
            error="&cUnable to create the jail &e{0}&c."
            exists="&cThe jail &e{0} &calready exists."
            success="&aThe jail &e{0} &awas created."
        }
        tp {
            noworld="&cCould not warp to the jail named &e{0}&c, the world is unloaded and may have been deleted."
            success="&aWarped to the jail &e{0}&a."
        }
        unavailable="&cThat jail is in an unloaded or deleted world."
        warpprompt="Click here to warp to the jail &e{0}"
    }
    jump {
        noblock="&cUnable to find a block to jump to."
        notsafe="&cUnable to jump to the target block safely."
        outsideborder="&cUnable to jump to a location outside of the world border."
        success="&aJumped to the target block."
    }
    kick {
        defaultreason="&eYou have been kicked!"
        exempt="&cThe user &4{0} &cis exempt from being kicked."
        message="{0} &awas kicked by &e{1}."
    }
    kickall {
        message="&aAll players were kicked."
        whitelist="&aThe whitelist was enabled."
    }
    kill {
        killed="&aYou killed &e{0}&a."
        killedby="&cYou were killed by &e{0}&c."
        overall="&a{0} entities were killed, of which {1} were players."
    }
    killentity {
        commandsourceradius="&cThe console cannot specify a radius."
        noselection="&cYou must select at least one entity type to kill."
        nothing="&cThere is nothing to kill."
        radiusworld="&cYou cannot specify a world and a radius at the same time."
        success="&aKilled {0} entities."
    }
    kit {
        add {
            alreadyexists="&cKit {0} already exists."
            success="&aKit {0} successfully created."
        }
        addempty {
            success="&aEmpty kit {0} successfully created."
        }
        autoredeem {
            off="&aThe kit &6{0} &ais no longer set to be automatically redeemed on login."
            on="&aThe kit &6{0} &ais now set to be automatically redeemed on login."
        }
        cancelledpre="&cCould not redeem the kit &6{0} &cbecause the event was cancelled."
        command {
            add {
                command="&aAdded the command \"&f{0}&a\" to the kit &f{1}&a."
            }
            clear {
                command="&aCleared all the commands from the kit &f{0}&a."
            }
            commands {
                entry="&e{0}. &f{1}"
                title="&aKit &f{0} &acommands."
            }
            edit {
                success="&aUpdated the commands in the kit &f{0}&a successfully."
                toomany="&cThere are too many commands in kit &f{0}&c to be displayed in a GUI."
            }
            nocommands="&aThe kit &f{0} &ahas no commands."
            remove {
                noexist="&cThe command \"&f{0}&c\" is not run by the kit &f{1}&c."
                onebased="&cCommand indexes are \"one based\", indexes start at 1."
                overidx="&cThere are only {0} commands for the kit &f{1}&c."
                success="&cThe command &f\"{0}&c\" was removed from the kit &f{1}&c."
            }
            removehover="&fRemove this command from your kit."
        }
        cooldown="&cYou must wait {0} before using the kit {1} again."
        cost {
            success="&aKit &6{0} &acost has been set to {1}."
        }
        create {
            failed="&cCould not create a kit with the name &e{0}&c."
            notcreated="&cCould not open a GUI to create your kit."
            title="Create Kit: {0}"
        }
        displaymessage {
            off="&aWill not notify the target player when the kit {0} is redeemed for/by them."
            on="&aWill notify the target player when the kit {0} is redeemed for/by them."
        }
        edit {
            cantopen="&cCouldn't open the kit \"&e{0}&c\"."
            current="&cThe kit \"&e{0}&c\" is currently being edited by another player."
            error="&cUnable to update the kit \"&e{0}&c\"."
            success="&aSuccessfully updated the kit \"&e{0}&a\"."
            title="Editing Kit: {0}"
        }
        fail="&cThe kit {0} could not be added to your inventory."
        fullinventory="&cYour inventory is full, some items were lost."
        fullinventorynosave="&cYour inventory does not have enough space, your kit was not redeemed."
        give {
            cooldown="{0} &cmust wait {1} before using the kit {2} again. Use \"-i\" to override."
            fullinventory="{0}&c's inventory is full, some items were lost."
            fullinventorynosave="{0}&c's inventory does not have enough space, the kit was not redeemed."
            itemsdropped="{0}&c's inventory is full, some items were dropped around them."
            onetime {
                alreadyredeemed="{0} &chas already redeemeed the one-time kit {1}. Use \"-i\" to override."
            }
            self="&cYou cannot give yourself a kit using this command. Use \"/kit\"."
            spawned="&aThe kit {1} was added to {0}&a's inventory."
        }
        hidden {
            off="&aWill not display the kit {0} in the kit list."
            on="&aWill display the kit {0} in the kit list."
        }
        info {
            autoredeem="&bAuto redeem: &e{0}"
            commandcount="&aNumber of Commands: &e{0}"
            cooldown="&bCooldown: &e{0}"
            cost="&bCost: &e{0}"
            displayredeem="&bMessage on redeem: &e{0}"
            firstjoin="&bFirst join kit: &e{0}"
            hidden="&bHidden from list: &e{0}"
            hover {
                commandcount="Click to view the commands (runs &o/nucleus:kit command {0}&r)"
                itemcount="Click to view the items (runs &o/nucleus:kit view {0}&r)"
            }
            ignoresperm="&bBypasses permission check: &e{0}"
            itemcount="&aNumber of Stacks: &e{0}"
            onetime="&bOne time: &e{0}"
            sep="&f-------"
            title="&bKit: &e{0}"
        }
        itemsdropped="&cYour inventory is full, some items were dropped on the ground."
        list {
            cost="&a - cost: {0}"
            empty="&cThere are no kits to display."
            interval="&cYou can next use &6{0} &cin {1}."
            kits="&aKits"
            onetime="&6{0} &cis a one time kit, which you have already used."
            text="&fClick to redeem kit &6{0}."
        }
        notenough="&cYou do not have enough for &6{0}&c, you require {1}."
        onetime {
            alreadyredeemed="&cThe kit {0} may only be redeemed once."
            off="&aThe kit &6{0} &ais no longer a one time use kit."
            on="&aThe kit &6{0} &ais now set as a one time use kit."
        }
        permissionbypass {
            off="&aThe permission &enucleus.kits.{0} &awill be checked when redeeming this kit, if enabled in the config."
            on="&aThe permission &enucleus.kits.{0} &awill never be checked when redeeming this kit."
        }
        remove {
            success="&aKit {0} successfully deleted."
        }
        rename {
            renamed="&aRenamed the kit &e{0}&a to &e{1} "
        }
        resetuser {
            empty="&cCannot reset &f{0}'s &cusage for the kit &6{1}&c - nothing needs to be reset."
            success="&aReset &f{0}'s &ausage for the kit &6{1}&a."
        }
        set {
            success="&aKit {0} successfully updated."
        }
        setcooldown {
            success="&aKit {0} cooldown set to {1}."
        }
        setfirstjoin {
            off="&aThe kit {0} will no longer be given to new players when they log in for the first time."
            on="&aThe kit {0} will be given to new players when they log in for the first time. It has also been hidden from /kit list."
        }
        spawned="&aThe kit {0} was added to your inventory."
        view {
            cantopen="&cCouldn't open the kit \"&e{0}&c\"."
            title="Viewing Kit: {0}"
        }
    }
    lightning {
        error="&cCould not create lightning strike."
        errorplayer="&cCould not smite &r{0}&c."
        success {
            other="&r{0}&a was smited."
        }
    }
    list {
        afk="&7[AFK]"
        hidden="&7[HIDDEN]"
        permission {
            failed="&cCould not get permission groups, cannot list players."
        }
        playercount {
            base="&eThere are {0}/{1} players online."
            hidden="&eThere are {0}/{1} players online. {2} are hidden."
        }
    }
    listhome {
        exempt="&cThat player is exempted from having their homes listed."
        player="&cYou must be a player or specify a name."
    }
    lockweather {
        locked="&aThe weather has been locked in the world &e{0}&a."
        unlocked="&aThe weather has been unlocked in the world &e{0}&a."
    }
    lore {
        clear {
            fail="&cUnable to clear the lore on the item."
            noitem="&cYou must be holding the item you wish to clear the lore of."
            none="&cNo lore to clear on the item in your hand."
            success="&aCleared the lore on the item in your hand."
        }
        set {
            fail="&cCould not update the lore on the item in your hand."
            invalidEdit="&cNo lore exists on that line."
            invalidLine="&cThat line number is invalid."
            noitem="&cYou must be holding the item you wish to set the lore of."
            success="&aLore has been updated on the item in your hand."
        }
    }
    mail {
        clear {
            nomail="&cYou have no mail to clear!"
            success="&aYour mail has been cleared."
        }
        date="&eDate sent:&f"
        delete {
            fail="&cThe mail could not be deleted - it may no longer exist."
            label="&cClick to delete this mail."
            success="&aThe mail was deleted."
        }
        hover="Click here to view more details about this mail."
        message="&eMessage:&f"
        none {
            filter="&cNo mail was found. Try broadening your search."
            normal {
                other="&e{0} &ahas no mail."
                self="&aYou have no mail."
            }
        }
        reply {
            label="&aClick here to reply to &e{0}&a."
        }
        send {
            error="&e{0} &cis unable to receive mail. Your mail was not sent."
            successful="&aYour mail was sent to &e{0}."
        }
        sender="&eSender:&f"
    }
    me {
        cancel="&cYour message could not be sent."
    }
    migrate {
        user {
            noexist="The user with UUID {0} was not found on the server and could not be migrated."
        }
        world {
            noexist="The world with UUID {0} was not found on the server. No settings for this world can be migrated."
        }
    }
    more {
        none="&cYou must be holding an item."
        success="&aYou are now holding {1} {0}."
    }
    motd {
        nocontroller="&cCould not get the MOTD."
    }
    msgtoggle {
        success {
            "false"="&aYou are now blocking private messages from other players."
            "true"="&aYou are now able to receive private messages from other players."
        }
    }
    mute {
        defaultreason="&eYou have been muted!"
        exempt="&cThe user &4{0} &cis exempt from being muted."
        fail="&cUnable to mute &e{0}&c."
        length {
            toolong="&cThe duration for that mute is too long! The maximum duration is &4{0}."
        }
        success {
            norm="&e{0} &ahas been muted by &e{1}."
            time="&e{0} &ahas been muted by &e{1} &afor &e{2}."
        }
    }
    nameban {
        failed="&cThe name &e{0} &cis already blocked from joining the server."
        notvalid="&cThat is not a valid username. Usernames are between 3 and 16 characters, made up of letters, numbers and underscores (_)."
        pardon {
            failed="&cThe name &e{0} &cis already allowed to join the server."
            success="&aAny player with the name &e{0} &acan now join the server."
        }
        success="&aAny player with the name &e{0} &ahas now been blocked from joining the server."
    }
    nick {
        colour {
            nopermswith="&cYou do not have permission to use the {0} colour in nicknames."
        }
        eventcancel="&cThe nickname change was cancelled by another plugin."
        nameinuse="&cThe name &r{0} &cis already someone's Minecraft username and cannot be used as a nickname."
        nopattern="&cThat nickname is not allowed on this server (regex: \"&e{0}&c\")"
        style {
            nopermswith="&cYou do not have permission to use the {0} style in nicknames."
        }
        success {
            base="&aYour nickname has been set"
            other="&e{0}&a's nickname has been set"
        }
        toolong="&cThat nickname is too long."
        tooshort="&cThat nickname is too short."
    }
    noitemconsole="&cYou must specify an item or block state ID to use this command from the console."
    noneinhand="&cYou must specify an item or block state ID or be holding the item in question in your main hand."
    note {
        fail="&cUnable to add a note to &e{0}&c."
        success="&e{0} &ahas added the note &e{1} &ato the user &e{2}."
    }
    noworld="&cThe world {0} does not appear to exist."
    noworldconsole="&cYou must specify a world to use this command from the console."
    nucleus {
        clearcache {
            success="&aSuccessfully cleared the user cache. Any manual changes to offline user's files will be read next time they reconnect."
            success2m="&aSuccessfully cleared the user cache of players that have been offline for more than two minutes. Use \"-f\" to clear all offline players."
        }
        debug {
            refreshuniquevisitors {
                done="&aRefreshed the unique visitors count (now {0})"
                started="&aRefreshing the unique visitors count (was {0})"
            }
            setsession="&eSession debug mode is now set to {0}."
            setsession2="&eThis does not affect your configuration. "
            uuid {
                clicktodelete="Click here to delete this users' Nucleus and Minecraft data files."
                header="&bUUIDs in green indicates the player is currently online."
                none="&cNo users with that username exist on this server."
                title="&aUsers: {0}"
            }
        }
        docgen {
            complete="&aDocumentation Generation has completed."
            start="&aStarting Documentation Generation."
        }
        getuser {
            failed="&cUnable to get information about {0}, possibly because the user doesn't exist."
            regex="&cThat is not a valid Minecraft username or UUID."
            starting="&eRequesting user details for &f{0}&e from Mojang."
            success="&aAdded profile with UUID &e{0}&a and name &e{1}&a to the cache."
        }
        info {
            fileerror="&cCould not save to disc."
            saved="&aInformation saved to the file {0} at the server root."
        }
        messageupdate {
            confirm="&aTo proceed, click this message or run &e{0}&a."
            couldnotload="&cCould not read the messages.conf file. Please check the console."
            notfile="&cThis command is only useful if you are using the \"messages.conf\" file."
            reloaded="&aMessages file reloaded."
            reset="&aThe keys were reset, the old translation was stored in the comments."
            sometoupdate="&a{0} messages require updating:"
        }
        permission {
            added="Added permission \"{0}\" to group \"{1}\""
            complete="&aPermissions for role {0} have been added to the {1} group. See the console for details of what was added."
            completegroups="&eGroups \"admin\", \"mod\" and \"default\" have been set up with inheritance and Nucleus default permissions."
            create="&eCreating group \"{0}\"..."
            groups {
                info="&eNucleus can use your permissions plugin to create \"admin\" and \"mod\" groups, setup inheritance, and add the Nucleus default permissions to these groups."
                info2="&eIf you wish to accept this, click here, or run \"nucleus:nucleus setupperms -g -y\"."
            }
            inherit="&eSetting group \"{0}\" as a parent of \"{1}\"..."
            perms="&eSetting up Nucleus permissions..."
        }
        rebuild {
            end="&aRebuild is complete."
            fail="&cA rebuild is already in progress."
            start="&aStarting rebuild of the Nucleus user cache."
        }
        removeitemalias {
            cleared="&aAll aliases for the item with ID \"&e{0}&a\" have been removed."
            removed="&aThe alias \"&e{0}&a\" has been removed from the item with ID \"&e{1}&a\"."
        }
        reset {
            complete="&aNucleus data for &e{0}&a has been deleted."
            completeall="&aNucleus and Minecraft data for &e{0}&a has been deleted."
            completenonm="&aNucleus data for &e{0}&a has been deleted. Minecraft data could not be deleted."
            failed="&cCould not delete data for the player &e{0}&c."
            reset="&aClick here if you wish to continue."
            restartadvised="&cA restart of the server is advised."
            starting="&aStarting removal of &e{0}"
            warning="&4WARNING!"
            warning2="&eThis command deletes all Nucleus data for the user {0}. This command will:"
            warning3="&e* Kick the player if they are online."
            warning4="&e* Ban them for 30 seconds."
            warning5="&e* Delete their Nucleus player file, which includes their homes, jailings, mutes, etc."
            warning6="&e* Remove the ban."
            warning7="&eThis command will NOT delete other minecraft data for the player. This CANNOT be undone. Are you sure you want to continue?"
            warning8="&4This command will also attempt to delete Minecraft and Sponge data for the player, but not data from other plugins. &eThis CANNOT be undone. Are you sure you want to continue?"
        }
        save {
            start="&aStarted data save task."
        }
        setitemalias {
            inuse="&cThe alias \"{0}\" is already in use."
            noidconsole="&cYou must specify the item ID you wish to create an alias for."
            noneinhand="&cYou must either specify the item ID or hold the item in your main hand to create an alias."
            notvalid="&cThe alias \"{0}\" is not valid. The alias can only contain letters, numbers, underscores and hyphens."
            success="&aThe alias \"&e{0}&a\" has been set for item with ID \"&e{1}&a\"."
        }
    }
    ping {
        current {
            other="{0}&a's current latency/ping: &e{1}ms"
            self="&aYour current latency/ping: &e{0}ms"
        }
    }
    plainbroadcast {
        failed="&cCould not send the requested broadcast."
    }
    playeronly="&cThis command can only be executed by players."
    powertool {
        ind {
            header="&aPowertool commands for &e{0}"
        }
        list {
            header="&ePowertools ({0}&e)"
            none="&aYou do not have any powertools."
        }
        nocmds="&cThere is no powertool associated with a &e{0}&c."
        noitem="&cYou must be holding an item to set or view a powertool."
        removed="&aThe item &e{0} &ano longer has a powertool associated with it."
        set="&aThe item &e{0} &ahas been associated with the command &e{1}&a."
        toggle="&aAll your powertools are now &e{0}&a."
        viewcmdstitle="&aYour commands for &e{0} ({1})&a."
    }
    pregen {
        gen {
            all="&cA world pre-generation is in progress. The server may run slowly whilst this completes."
            cancelled2="&aWorld generation has been cancelled. {0} chunks were generated ({1} were pre existing), taking {2} wall clock time."
            completed="&aWorld generation is complete. {0} chunks were generated ({1} were pre existing), taking {2} of server time (overall: {3})."
            memory {
                high="&cMemory usage is high ({0}%). Generation is paused, requesting unload of chunks."
                low="&cMemory usage has reduced. Generation is restarting."
            }
            notify="&e{0} chunks were generated in {1} (over {2}). Generation is {3}% complete."
            notifyskipped="&e{0} chunks were generated ({1} skipped) in {2} (over {3}). Generation is {4}% complete."
            quickstatus="&aWorld generation is now at {0}%. ({1}/{2} chunks processed)"
            saved="&eWorld has been saved. Continuing generation."
            savefailed="&cCould not save world. Going to continue anyway, check the console for details."
            saving="&eNow saving world, just in case."
        }
    }
    printperms="&aThe suggested permissions have been written to &e{0}&a."
    realname {
        nonames="&cThere is no-one on the server with a name starting with \"&e{0}&c\"."
        title="&aReal names for \"&e{0}&a\""
    }
    reason="Reason: {0}"
    reload {
        errorone="&cAn error occurred reloading the Nucleus config. Check the console for details."
        one="&eYour configuration has been reloaded."
        two="&ePlease note that changes to modules require a full server restart."
    }
    removenote {
        failure="&aNote for &e{0} &acould not be cleared."
        remove="&aNote for &e{0} &ahas been removed successfully."
        success="&aNote for &e{0} &ahas been cleared."
    }
    removewarning {
        expire="&aWarning for &e{0} &ahas been expired successfully."
        failure="&aWarning for &e{0} &acould not be cleared."
        remove="&aWarning for &e{0} &ahas been removed successfully."
        success="&aWarning for &e{0} &ahas been cleared successfully."
    }
    repair {
        empty="&cThere are no items in {0}'s {1}."
        error {
            multiple="&cAn error occurred repairing &e{0} &citems in {1}'s {2}."
            single="&cAn error occurred repairing &e{0} &cin {1}'s {2}."
        }
        location {
            equipment=equipment
            hotbar=hotbar
            inventory=inventory
            mainhand=hand
            offhand=offhand
        }
        nodurability {
            multiple="&e{0} &citems in {1}'s {2} are not repairable."
            single="&e{0} &cin {1}'s {2} is not repairable."
        }
        restricted {
            multiple="&e{0} &citems are blacklisted and could not be repaired."
            single="&e{0} &cis blacklisted and could not be repaired."
        }
        success {
            multiple="&aSuccessfully repaired &e{0} &aitems in {1}'s {2}."
            single="&aSuccessfully repaired &e{0} &ain {1}'s {2}."
        }
    }
    rocket {
        noothers="You do not have permission to rocket others"
        other="You have rocketed {0}"
        self="You have been rocketed"
    }
    rtp {
        cancelled="&cYou cannot teleport at this time."
        error="&cTimed out trying to find a safe location to warp to."
        inprogress="&cThe player {0} is already searching for a random location."
        other="&aYou are about to be teleported to a safe random location."
        searching="&aSearching for a safe random location..."
        success="&aYou have been teleported to the co-ordinates &e{0}, {1}, {2}&a."
        successother="{0} &ahas been teleported to the co-ordinates &e{1}, {2}, {3}&a."
        worldnoload="&cThe world &e{0} &ccould not be loaded and cannot be teleported to."
        worldnoperm="&cYou do not have permission to rtp in &e{0}&c."
    }
    rules {
        empty="&cThe server owner has not set any rules in Nucleus."
    }
    seen {
        afk="&bAFK: &f{0} &b(last activity: {1})"
        canfly="&bCan fly: &f{0}"
        core=Core
        currentlocation="&bCurrent Location: &f{0}"
        displayname="&bDisplay name: &f{0}"
        firstplayed="&bFirst played: &f{0}"
        gamemode="&bGamemode: &f{0}"
        ipaddress="&bIP Address: &f{0}"
        ipclick="&oClick here to see all players associated with this IP address."
        iscurrently {
            offline="&e{0}&b is currently &coffline"
            online="&e{0}&b is currently &aonline"
        }
        isflying="&bIs flying: &f{0}"
        lastipaddress="&bIP Address: &f{0} &c(last known)"
        lastlocation="&bLast Location: &f{0}"
        lastplayed="&bLast played: &f{0}"
        locationtemplate="World: {0}, Co-ords: {1}"
        loggedoff="&bLast online: &f{0}"
        loggedon="&bOnline for: &f{0}"
        speed {
            fly="&bFlying Speed: &f{0}"
            walk="&bWalking Speed: &f{0}"
        }
        teleportposition="&oClick here to teleport to this location."
        title="&aPlayer Info: &e{0}"
        uuid="&bUUID: &f{0}"
    }
    serverlist {
        head {
            messages="&aServer list MOTD messages"
            whitelist="&aServer list MOTD whitelist messages"
        }
        hideplayers="&aThe player count will not be displayed in the server list."
        hidevanished="&aVanished players are not included in the player count."
        message {
            empty="&aThe temporary server list MOTD has been cleared."
            expiry="&aThis message will expire in &e{0}."
            isempty="&cThere is currently no temporary server list MOTD."
            noremoved="&cThere was no temporary server list MOTD to remove."
            notset="&cCould not set the server list MOTD."
            removed="&aThe temporary server list MOTD has been removed."
            required="&cA message is required for the server list."
            set="&aThe server list MOTD has been set to the following:"
        }
        messages {
            click="&eClick here to see the current MOTD messages."
        }
        modify {
            "false"="&cNucleus currently does not control the server list MOTD."
            "true"="&aNucleus currently controls the server list MOTD."
            whitelist="&aNucleus only controls the server list MOTD when the whitelist is on."
        }
        nomessages="&cThere are no messages"
        tempheader="&aThere is currently a temporary server list MOTD."
        whitelistmessages {
            click="&eClick here to see the current whitelist MOTD messages."
        }
    }
    serverstat {
        allocated {
            hover="This is the amount of memory currently being used by the server. \n\nIf the \"% of max\" is close to 100%, your server has a good chance of running out of memory soon."
            main="&aUtilised memory: &f{0} MB &7({1}% of allocated, {2}% of max)"
        }
        averagetps="&aAverage TPS for session: {0}&7/20.00"
        freemem {
            hover="This is the amount of memory currently allocated to the server that is not being used. \n\nIf this number is low, that does not necessarily mean you are running out of memory, unless the maximum and allocated memory numbers are similar."
            main="&aFree (but allocated) memory: &f{0} MB"
        }
        jvmuptime {
            hover="This is the amount of time Java has been running."
            main="&aJVM Uptime: &f{0}"
        }
        maxmem {
            hover="This is the maximum amount of memory that can be allocated to this server. This does not mean that this memory is in use."
            main="&aMaximum allocatable memory: &f{0} MB"
        }
        title="&aServer Statistics"
        totalmem {
            hover="This is the amount of memory currently allocated to the server. This includes both used memory and allocated but unused memory (\"free memory\")."
            main="&aAllocated memory: &f{0} MB"
        }
        tps="&aCurrent TPS: {0}&7/20.00"
        uptime {
            hover="This is the amount of time the server has been able to accept players."
            main="&aServer Uptime: &f{0}"
        }
        world {
            info="&aType: &f{0}&a, Generator: &f{1}&a, Entities: &f{2}&a, Loaded chunks: &f{3}"
            title="&6World: {0}"
        }
    }
    servertime {
        time="&aCurrent server wall clock time: &e{0}&a."
    }
    setfirstspawn {
        remove="&aThe first-time spawn has been removed."
        success="&aThe first-time spawn has been set at your location."
        success2="&aConsider setting the &e\"spawnRadius\" &agame rule to &e0 &ato try to ensure new players spawn here exactly."
    }
    sethome {
        limit="&cYou cannot set any more homes as you have reached your limit of &e{0}&c."
        name="&cThe home name must be alphanumeric and start with a letter."
        overhang="&cYou cannot move your home because you have too many set - you are entitled to &e{0}&c, but you have &e{1}&c. Delete homes using &e/delhome."
        overwrite="&aYour previous home with the name &e{0} &ahas been deleted."
        set="&aSet a home with the name \"&e{0}&a\"."
        seterror="&cYou already have a home set with the name \"&e{0}&c\"."
        tooverwrite="&cIf you are sure you want to overwrite this home, run &e/sethome -o {0}&c, or click this message."
    }
    setspawn {
        success="&aThe spawn point for world \"&e{0}&a\" was set to your current location."
    }
    settime {
        done="&aThe time on the world has been set to &e{0}&a."
        done2="&aThe time on the world \"&e{0}&a\" has been set to &e{1}&a."
    }
    setworth {
        alreadyunavailable="&cThe item &e\"{0}\" &cwas already unavailable to {1}."
        noeconservice="&cWarning: No economy has been detected. To make use of the server shop, you must install an economy plugin."
        samecost="&cThe {0} cost of &e\"{1}\"&c is already set to {2}."
        success {
            changed="&aThe item &e{0} &ais now available to {1} for &e{2}&a (it was previously available for &e{3}&a)."
            new="&aThe item &e{0} &ais now available to {1} for &e{2}&a."
            removed="&aThe item &e{0} &ais no longer available to {1} (it was available for &e{2}&a)."
        }
    }
    showitemattributes {
        success {
            "false"="&aNow hiding attributes on the item in your hand ({0})."
            "true"="&aNow showing attributes on the item in your hand ({0})."
        }
    }
    skull {
        error="&cFailed to create {0}'s skull."
        full="&cCannot create {0}'s skull because your inventory is full."
        semifull="&c{0} skulls could not be added to your inventory because it was filled."
        success {
            plural="&aAdded {0} of {1}'s skull to your inventory."
            single="&aAdded {0}'s skull to your inventory."
        }
    }
    socialspy {
        forced="&cYou cannot turn off social spy."
        off="&aYou can no longer see others' private messages."
        on="&aYou can now see others' private messages."
        unable="&cYour social spy status could not be set."
    }
    spawn {
        cancelled="&cCould not warp you to the world spawn point for world &e{0} &c: your warp was cancelled."
        fail="&cCould not warp you to the world spawn point for world &e{0} &csafely. Ask an administrator to set a safe spawn point."
        nopermsworld="&cYou do not have permission to warp to the world spawn for \"{0}\"."
        noworld="&cCould not get the world, unable to spawn."
        success="&aYou have warped to the spawn point for world &e{0}&a."
    }
    spawnmob {
        blockedinconfig="&cThe entity {0} has been disabled on this server and cannot be spawned in."
        fail="&cUnable to spawn in any {0} entities."
        limit="&cThe maximum number of mobs you can spawn in at once is {0}. This can be changed in the Nucleus config if desired."
        livingonly="&cUnable to spawn in {0}, the entity must be living."
        mobnoperm="&cYou do not have permission to spawn in {0} entities."
        success {
            plural="&aSpawned in {0} {1} entities."
            singular="&aSpawned in {0} {1} entity."
        }
    }
    spawnother {
        fail="&cCould not send &r{0} &cto the &e{1} &cworld spawn."
        offline {
            permission="&cYou do not have permission to send offline players to spawn."
            sendonlogin="&aWill send &r{0} &ato the &e{1} &aworld spawn on next login."
        }
        other {
            failed {
                noreason="&cYou cannot send &r{0} &cto spawn right now."
                reason="&cYou cannot send &r{0} &cto spawn for the reason: {1}"
            }
        }
        self {
            failed {
                noreason="&cYou cannot warp to spawn right now."
                reason="&cYou cannot warp to spawn for the reason: {0}"
            }
        }
        success {
            source="&aSent &r{0} &ato the &e{1} &cworld spawn."
            target="&aYou have been sent to the &e{0} &aworld spawn."
        }
    }
    specifyworld="&cThe world must be specified."
    speed {
        fail="&cThe {0} speed could not be set."
        flying="&eFlying speed:"
        max="&cThe speed cannot be larger than {0}."
        negative="&cThe speed cannot be negative."
        success {
            base="&aYour {0} speed has been set to {1}."
            other="&e{0}&s's {1} speed has been set to {2}."
        }
        walk="&eWalking speed:"
    }
    staffchat {
        cancelled="&cCould not send your message into staff chat."
        consoletoggle="&cToggle is not available for non-players, use /a <message>."
        off="&bYou are no longer chatting in the Staff Chat Channel."
        on="&bYou are now chatting in the Staff Chat Channel."
    }
    sudo {
        chatcancelled="&cThe chat message was cancelled."
        chatfail="&cA chat message must be specified."
        force="&aForcing &e{0} &ato run the command \"&e/{1}&a\"."
        noperms="&cYou cannot force that player to run a command."
    }
    suicide {
        error="&cUnable to commit suicide."
    }
    teleport {
        error="&cUnable to perform the requested warp."
        nolastknown="&cCould not get last known location for {0}."
        noofflineperms="&cYou do not have permission to teleport to offline player locations."
        offline {
            other="{0} &awas teleported to &f{1}'s &alast known location."
            self="&aYou teleported to &f{0}'s &alast known location."
        }
        player {
            noself="&cDo not specify yourself when teleporting."
        }
        self="&cYou cannot teleport to yourself."
    }
    tellplain {
        failed="&cCould not send the requested message."
    }
    tempban {
        applied="&e{0} &awas banned temporarily for &e{1}&a by &e{2}&a."
        exempt="&cThe user &4{0} &cis exempt from being temporarily banned."
        length {
            toolong="&cThe duration for that tempban is too long! The maximum duration is &4{0}."
        }
        offline {
            noperms="&cYou do not have permission to tempban offline players."
        }
    }
    thru {
        nospot="&cNo free spot beyond the wall found."
        notsafe="&cUnable to find a safe place to jump to."
        nowall="&cNo wall in front of you to travel through."
        success="&aYou jumped through the wall."
    }
    time="&aThe time on world &e{0} &ais currently &e{1}&a."
    top {
        attop {
            other="{0} &cis already on or above the surface."
            self="&cYou are already on or above the surface."
        }
        cancelled="&cCould not jump to the surface, teleport was cancelled."
        nothingfound="&cCould not find a block to jump to."
        notsafe="&cCould not find a safe place to jump to on the surface. Add -f to the command to force the jump."
        success {
            other="&aMoved &f{0} &ato the surface."
            self="&aYou jumped to the surface."
        }
    }
    tpa {
        eventfailed="&cВаша телепортация была отменена."
        question="&e{0} хочет телепортироваться к вам."
    }
    tpaall {
        success="&aYour request to teleport everyone to you has been sent successfully."
    }
    tpaccept {
        nothing="&cНет запросов на телепортацию."
        success="&aВы принили запрос на телепортацию."
    }
    tpahere {
        question="&e{0} хочет чтобы вы телепортировались к нему."
    }
    tpall {
        broadcast="&e{0} &chas enforced a teleport of all players to them."
        cancelled="&cThe following players did not receive a request: {0}."
    }
    tpask {
        sent="&aЗапрос был отправлен &e{0}&a."
    }
    tpdeny {
        deny="&aВы отклонили запрос на телепортацию."
        fail="&cНет запросов на телепортиацию."
    }
    tphere {
        couldnotset="&cCould not set the new location of the offline player &f{0} &cto your location."
        noofflineperms="&cYou do not have permission to teleport offline players to your location."
        offlinesuccess="{0} &awill be at your current location upon next login."
    }
    tppos {
        cancelledevent="&cCould not teleport: teleportation was cancelled."
        fromchunk="&eChunk co-ordinates supplied - attempting teleport to the middle of the chunk at ({0}, {1}, {2})."
        invalid="&cThe supplied co-ordinates are invalid."
        nosafe="&cCould not teleport: no safe spot was found or teleportation was cancelled."
        success {
            other="&aTeleportation of &e{0}&a has been completed."
            self="&aYou have been teleported."
        }
        worldborder="&cThe supplied co-ordinates are outside of the world border."
        ysmall="&cThe y co-ordinate must be positive."
    }
    tptoggle {
        success="&aTeleportation to you has now been &e{0}&a."
    }
    trash {
        error="&cCould not open the trash inventory window."
        title=Trash
    }
    unban {
        success="&e{0} &awas unbanned by &e{1}."
    }
    unknownsource="&cThis command cannot be executed by this source."
    unmute {
        perm="&cYou do not have permission to unmute players."
        success="&e{0} &ahas been unmuted by &e{1}."
    }
    unstuck {
        cancelled="&cA plugin cancelled unsticking you."
        nolocation="&cThere is no safe place to move you to."
        notneeded="&cYou do not need to be unstuck."
        success="&aYour player has been unstuck."
    }
    usage {
        description="&eDescription:"
        header="&aUsage for &e/{0}"
        module="&eModule: &f{0} &e(ID: &f{1}&e)"
        noexist="&cThe command &e{0} &cis not a valid subcommand."
        nopermission="&cYou do not have permission to view this help page."
        playeronly="&eThe command can only be run by players."
        subcommand="&eAvailable subcommands:"
        suggest="Click here to suggest this command. \nShift click to suggest the help command."
        summary="&eSummary:"
        usage="&eUsage: "
    }
    vanish {
        fail="&cCould not set vanish status."
        noperm="&f{0} &cdoes not have permission to be vanished upon login."
        success="&aYou are now &e{0} &ato other players."
        successplayer="&f{0} &ais now &e{1} &ato other players."
        successuser="&f{0} &awill now be &e{1} &ato other players upon next login."
        vanished=invisible
        visible=visible
    }
    voice {
        alreadynotvoiced="{0} &cdoes not have voice."
        alreadyvoiced="{0} &calready has voice."
        autovoice="&cThe player &f{0} &cautomatically has voice."
        globaloff="&cGlobal mute is currently disabled, voice has no effect."
        unvoiced {
            source="{0} &ano longer has voice and can no longer speak."
            target="&eYou no longer have voice and can no longer speak."
        }
        voiced {
            source="{0} &ahas voice and can now speak."
            target="&eYou now have voice and can speak."
        }
    }
    warn {
        exempt="&cThe user &4{0} &cis exempt from being warned."
        fail="&cUnable to warn &e{0}&c."
        length {
            toolong="&cThe duration for that warning is too long! The maximum duration is &4{0}."
            tooshort="&cThe duration for that warning is too short! The minimum duration is &4{0}."
        }
        success {
            norm="&e{0} &ahas been warned by &e{1} &afor reason &e{2}."
            time="&e{0} &ahas been warned by &e{1} &afor reason &e{2}&a, the warning will expire in &e{3}."
        }
    }
    warp {
        category {
            added="&aThe category &e{0}&a was added to the warp &e{1}&a."
            couldnotadd="&cThe category &e{0}&c could not be added to the warp &e{1}&c."
            description {
                removed="&aThe category &e{0} &ahas had its description removed."
                set="&aThe category &e{0} &ahas been given the description &f{1}."
            }
            displayname {
                removed="&aThe category &e{0} &ahas had its display name removed."
                set="&aThe category &e{0} &ahas been given the display name &f{1}."
            }
            listitem {
                description="&aDescription: &f{0}"
                simple="&e{0} &a- Display Name: &f{1}"
                title="&aWarp Categories"
            }
            noremove="&cCould not remove the category for the warp &e{0}&c."
            removed="&aRemoved the category for the warp &e{0}&a."
            required="&cA warp category is required."
            requirenew="&cThe category &e{0}&c does not exist yet. Click here (or use -n in the command) if you want to create this category."
        }
        cost {
            alt="&aor add \"-y\" to your command."
            charged="&aYou were charged &e{0} &ato use this warp."
            clickaccept="&a&nClick here to accept this cost and warp&r &r"
            clickhover="&fClick to run {0}"
            details="&aThe warp &e{0}&a costs &c{1} &ato use."
            nomoney="&cThe warp &e{0}&c costs &e{1} &cto use, but you do not have the money to pay this amount."
        }
        costset {
            arg="&cThe cost of the warp must be zero, positive, or -1 to reset the cost to the default amount of &e{0}&a."
            failed="&cCould not set the cost for a warp named &e{0}&c."
            reset="&aThe cost for warp &e{0} &ahas been reset to the default amount of &e{1}&a."
            success="&aSet the cost of the warp &e{0} &ato &e{1}&a."
        }
        description {
            added="&aThe description \"&r{0}&a\" was added to the warp &e{1}&a."
            couldnotadd="&cThe description could not be added to the warp &e{0}&c."
            noremove="&cCould not remove the description for the warp &e{0}&c."
            removed="&aRemoved the description for the warp &e{0}&a."
        }
        worldnotloaded="&cCould not load the target world."
    }
    warps {
        cancelled="&cCould not warp, teleportation was cancelled."
        del="&aThe warp &e{0} &ahas been deleted."
        delerror="&aCould not delete the warp."
        invalidname="&cWarps can only be alphanumeric, and must begin with a letter."
        list {
            back="&c&n< Back to Categories"
            category="&aWarp List: &e{0}"
            cost="&b - cost: &e{0}"
            costhover="Cost: &e{0}"
            header="&aWarp List"
            headercategory="&b&oClick on a category to view the warps for that category."
            maincategory="&aWarp List: Categories"
            nowarps="&cThere are no warps to display."
        }
        namedstart="&aWarping &f{0} &ato &e{1}&a."
        nooverwrite="&cThat warp already exists."
        nosafe="&cCould not warp to a safe location nearby. To force a warp, use the \"-f\" flag."
        set="&aThe warp &e{0} &ahas been set."
        seterror="&cCould not set the warp."
        start="&aWarping to &e{0}&a."
        unavailable="&cWarp currently unavailable."
        warped="&aYou were warped to the warp &e{0}&a."
        warploc="&e - Location: {0}, {1}"
        warplochover="Location: &e{0}, {1}"
        warpprompt="Click to warp to &e{0}&f."
    }
    weather {
        locked="&cThe weather is locked for the world &e{0}&c. It must be unlocked to change the weather."
        set="&aYou set the weather to &e{0} &ain the world &e{1}&a."
        time="&aYou set the weather to &e{0} &ain the world &e{1} &afor &e{2}&a."
        toolong="&cThe maximum amount of time the weather can be set to last for is &4{0}."
    }
    world {
        border {
            centre="&aCentre - x: {0}, z: {1}"
            currentdiameter="&aCurrent Diameter: {0} blocks"
            targetdiameter="&aTarget Diameter: {0} blocks in {1} seconds."
            title="&aWorld Border: &e{0}"
        }
        cancelgen {
            cancelled="&aGeneration of chunks within the world border for the world &e{0} &ahas been cancelled."
            notask="&cThere is no chunk generation task running for the world \"&e{0}&c\"."
        }
        clone {
            alreadyexists="&cThe world {0} already exists. Please choose a different world name."
            failed="&eThe world &e{0} &ecould not be cloned."
            starting="&aStarting copy of world &e{0} &ato a new world named &e{1}&a."
            success="&aThe world &e{0} &awas copied successfully - a new world &e{1}&a has been created."
        }
        create {
            begin="&aStarting creation of world &e{0}&a."
            couldnotsave="&cCould not save the world properties for the world &e{0}&c."
            exists="&cA world with the name &e{0}&c already exists."
            fail="&cCould not create the world &e{0}&c."
            newparams="&aDimension: &e{0}&a, Generator: &e{1}&a, Modifier: &e{2}&a, Gamemode: &e{3}&a, Difficulty: &e{4}&a."
            newparams2="&aLoad on startup: &e{0}&a, Keep spawn loaded: &e{1}&a, Generate structures: &e{2}&a, Allow commands: &e{3}&a, Generate bonus chest: &e{4}&a."
            nomodifiers="no modifiers"
            success="&aThe world &e{0} &ahas been created."
            worldfailedtoload="&aThe world &e{0} &awas created, but could not be loaded. This might be because \"allow-nether\" is set to false in \"server.properties\", it must be set to true."
        }
        delete {
            complete {
                error="&aThe world &e{0}&a has been deleted, but with errors. See the console for details."
                success="&aThe world &e{0}&a has been deleted."
            }
            confirmed="&aDeletion confirmed. Starting removal of the world &e{0}&a."
            loaded="&cCannot delete &e{0}&c whilst it is loaded."
            notfound="&cUnable to locate the &e{0}&c data directory."
            unabletoremove="Unable to remove the file {0}."
            warning1="&4WARNING! &cYou are about to delete the world &e{0}&c. &4THERE IS NO UNDO."
            warning2="&cWe think it's found at &e{0}&c."
            warning3="&4IF YOU ARE ABSOLUTELY SURE, run &e/world delete {0}&4 again within 30 seconds."
        }
        disable {
            alreadydisabled="&cThe world &e{0} &cis already disabled."
            couldnotdisable="&cThe world &e{0} &ccould not be disabled, either because it's a default world or the world config is not enabled."
            success="&aThe world &e{0} &ahas been disabled."
            warnloaded="&cThe world &e{0}&c is still loaded and cannot be disabled."
        }
        enable {
            alreadyenabled="&cThe world &e{0} &cis already enabled."
            success="&aThe world &e{0} &ahas been enabled."
        }
        gamerule {
            header="&aGamerules for world &e{0}"
            key="&b{0} &f= {1}"
            set {
                success="&aSet the gamerule \"&e{0}&a\" to \"&e{1}&a\" for the world \"&e{2}&a\" successfully."
            }
        }
        gen {
            alreadyrunning="&cThe world &e{0} &cis already generating chunks."
            continue="Generation of chunks for \"{0}\" is still ongoing. Last message:"
            notloaded="&cThe world &e{0} &cis not loaded, please load it before pre-generating chunks."
            started="&aGeneration of chunks within the world border for the world &e{0} &ahas started."
            using {
                standard="Using Sponge's chunk generation routines."
            }
        }
        generators {
            title="&aAvailable Generators"
        }
        import {
            noexist="&cThe world directory &e{0} &cexists. Add \"-i\" to try to import this world."
        }
        info {
            title="&aWorld: &e{0}"
        }
        list {
            dimensionid="&fDimension ID: &e{0}"
            disabled="Enabled: &cfalse&f."
            enabled="Enabled: &atrue&f. Loaded: {0}&f."
            params="&fDimension: &e{0}&f, Generator: &e{1}&f, Modifiers: &e{2}&f, Gamemode: &e{3}&f, Difficulty: &e{4}"
            params2="&fHardcore: &e{0}&f, Load on Startup: &e{1}&f, PVP: &e{2}&f, Keep Spawn Loaded: &e{3}"
            seed="Seed: &e{0}"
            spawnpoint="&fSpawn Location: &ex: {0}, y: {1}, z: {2}"
            title="&aWorlds"
            uuid="&fUUID: &e{0}"
            worlditem="World: &e{0}"
        }
        load {
            alreadyloaded="&cThe world &e{0}&c is already loaded."
            fail="&cCould not load the world &e{0}&c."
            loaded="&aThe world &e{0} &ahas loaded successfully."
            notenabled {
                enable="&cThe world &e{0} &cis not enabled and cannot be loaded. Add &e-e&c if you wish to enable the world."
                noenable="&cThe world &e{0} &cis not enabled and cannot be loaded."
            }
            start="&aLoading world &e{0}&a."
        }
        modifiers {
            title="&aAvailable Generator Modifiers"
        }
        player="&cYou must be a player or specify a world name."
        presets {
            item="&e{0} &a({1})"
            title="&aAvailable World Presets"
        }
        rename {
            failed="&cUnable to rename the world &e{0} &cto &e{1}&c."
            success="&aRenamed the world &e{0} &ato &e{1} &asuccessfully."
        }
        setborder {
            set="&aThe world border is now set for world &e{0}, &aaround ({1}, {2}) with a diameter of {3} blocks."
            setdelay="&aThe world border is now changing over {4} seconds for world &e{0}, &ato be around ({1}, {2}) with a diameter of {3} blocks."
        }
        setdifficulty {
            success="&aSet world difficulty for &e{0}&a to &e{1}&a."
        }
        setgamemode {
            success="&aSet game mode for &e{0}&a to &e{1}&a."
        }
        sethardcore {
            diff="&aNote: the difficulty of the world is now set to \"&e{0}&a\"."
        }
        setproperty {
            success="&aThe property \"&e{0}&a\" for &e{1}&a has been set to \"&e{2}&a\"."
        }
        setspawn {
            success="&aSet world spawn."
        }
        spawn {
            success="&aTeleported to world spawn."
        }
        teleport {
            failed="&cCould not teleport to the world &e{0}&c."
            notenabled="&cCould not teleport to the world &e{0}&c, it has not been enabled."
            success="&aYou have been teleported to the spawn point for &e{0}&a."
            successplayer="{0} &ahas been teleported to the spawn point for &e{1}&a."
        }
        unload {
            alreadyunloaded="&cThe world &e{0}&c has already been unloaded."
            failed="&cUnable to unload the world &e{0}&c."
            players="&cThe world &e{0}&c cannot be unloaded because players are still in the world. Use \"-t [world]\" to transfer them out before unloading."
            start="&aAttempting to unload world &e{0}&a."
            success="&aThe world &e{0}&a has been unloaded."
        }
    }
    worth {
        buy="&eBuy price: {0}"
        nothing="&f{0}&e items do not have a buy or sell price."
        sell="&eSell price: {0}"
        something="&f{0}&e: {1}."
    }
}
commandlog {
    couldnotwrite="Could not write log entry to Nucleus log file"
    message="{0} ran the command: /{1} {2}"
}
config {
    afk {
        broadcastonkick="If true, the server will be informed when a player is kicked for inactivity, else, just those with the nucleus.afk.notify permissions"
        messages {
            base="If any of the messages tht would be broadcast to the server are blank, they will not be sent."
        }
        messagetobroadcastonkick="If empty, no message will be sent."
        oncommandsend="If true, any player that tries to use a command that might require the target to do something will be told if the target is AFK."
        playerkicked="The message sent to a player when kicked for inactivity."
        spectatormode="If true, a player in spectator mode will not have their status broadcasted to players, nor will they be kicked for going AFK. Those with the notify permission will still see the AFK messages."
        time="The amount of time, in seconds, of inactivity before the player will be marked as AFK. Set to 0 to disable, or use the permission \"nucleus.afk.exempt.toggle\"."
        timetokick="The amount of time, in seconds, of inactivity before the player will be kicked. Set to 0 to disable, or use the permission \"nucleus.afk.exempt.kick\".\n\nNote that this is not time since going AFK, but time since last activity. Setting this to the same value as \"afktime\" will cause someone who goesAFK to be kicked instantly."
        triggers {
            onchat="Marks a player as active if they chat"
            oncommand="Marks a player as active if they run a command"
            oninteract="Marks a player as active if they interact"
            onmove="Marks a player as active if they move"
            onrotation="Marks a player as active if they rotate (that is, look around)"
            summary="Determines what actions determines if a player is active."
        }
        whenvanished="If true, the server will announce when players go AFK, even when vanished. If false, only non-vanished players can go AFK."
    }
    aliases="The commands below are aliases of these commands. Set to false to disable them."
    back {
        ondeath="Log player's location on death."
        onportal="Log player's last location after travelling through a portal."
        onteleport="Log player's last location on warp."
    }
    blockspawn {
        category="Controls the mobs that cannot be spawned. Each section is world specific, with the key being the world name in question, which is case sensitive."
        ids="The full IDs of the mobs to block. Minecraft mobs have an id starting with \"minecraft:\""
        vanilla="If true, all vanilla mobs will be blocked in this world."
    }
    broadcast {
        msg="No longer used. Should be deleted."
        template="The prefix and suffix when sending a broadcast message. Accepts chat tokens such as {{displayname}}, {{name}}, etc."
    }
    chat {
        check-permission-groups="If true, Nucleus will select the most appropriate group template for a player when they send a chat message by checking all of the groups that a player has if the player does not have the \"nucleus.chat.group\" permission option set. If false, Nucleus will only look for the \"nucleus.chat.group\" option on players when they chat and will match that to the available group templates, if no match, Nucleus will apply the default template without checking actual permission groups. \n\nIf your chat is lagging and you have group templates turned on, try setting this to false and giving your groups the appropriate \"nucleus.chat.group\" permission option."
        checkbody="Some mods and plugins move the Minecraft player prefix to the main message body. If this is the case, turn this on, and Nucleus \nwill try to remove it."
        default-template="The default chat template if no group templates apply."
        group-templates="Group templates override the default chat template based on the users group. Note that the group name is case sensitive.\nWeight matters, the player will use the highest weighted template in this list that matches a group they are in, including inherited groups. If the same weight is used on two or more entries, the group with the most parents will be used."
        "includeprefix"="If false, Nucleus will prepend it's prefixes/headers with those already set buy other plugins. If true, it will overwrite them."
        "includesuffix"="If false, Nucleus will prepend it's suffixes/footers with those already set buy other plugins. If true, it will overwrite them."
        main="If true, Nucleus will take the message and try to apply it's own transforms to it. This may overwrite other plugins who do processing super early, so turn this off if you are having problems."
        meprefix="The prefix to use when someone uses \"/me\"."
        modify="If \"true\", Nucleus will attempt to modify the chat"
        removeunderlines="If true, Nucleus will try to remove any text formatted in blue and underlined that Minecraft has tried to turn into a link."
        template {
            chatcolour="The default colour for a player's chat if the \"chatcolour\" permission option isn't set on the player or group. Takes the same input as the \"namecolour\" option set to \"\" to retain default behaviour (no change of colour). Do not include the \"&\" character."
            chatstyle="The default styles for a player's chat if the \"chatstyle\" permission option isn't set on the player or group. Takes the same input as the \"chatstyle\" option set to \"\" to retain default behaviour (no style). Do not include the \"&\" character. Multiple styles must be separated by commas."
            namecolour="The default colour for a player's name if the \"namecolour\" permission option isn't set on the player or group. Takes the same input as the \"chatcolour\" option set to \"\" to retain default behaviour (no change of colour). Do not include the \"&\" character."
            namestyle="The default styles for a player's name if the \"namestyle\" permission option isn't set on the player or group. Takes the same input as the \"namestyle\" option, set to \"\" to retain default behaviour (no style). Do not include the \"&\" character. Multiple styles must be separated by commas."
            prefix="Sets the prefix to a message. {{prefix}} - prefix (set as an option in a permission plugin), {{suffix}} - suffix (set as an option in a permission plugin), {{name}} - real name, {{displayname}} - display name"
            suffix="Sets the suffix to a message. {{prefix}} - prefix (set as an option in a permission plugin), {{suffix}} - suffix (set as an option in a permission plugin), {{name}} - real name, {{displayname}} - display name"
        }
        useGroupTemplates="If \"true\", then Nucleus will select the most appropriate group template for a player when they send a chat message. If it's false \nthe default template will always be used, but there will be a performance gain because a player's groups not not have to be retrieved from the permission plugin. \nTurn this off if you are getting severe performance problems when someone chats, it's usually due to a misbehaving permissions plugin."
        weight="The weight of the template. A higher number will take priority over lower numbers when two templates could apply to the same player because they are in the both groups."
    }
    chatlog {
        chat="Log chat messages to the log file."
        enable="Whether to actually perform any logging."
        mail="Log mail messages to the log file."
        message="Log private messages to the log file."
    }
    command {
        teleport {
            warmup="Teleportation warmups must be set in the main config."
        }
    }
    commandlogger {
        file="If true, will log commands to files at /logs/nucleus/commands"
        list="A comma separated list of commands in the blacklist or whitelist (see whitelist option). Only one alias per command is required."
        source {
            base="If any option is true, log commands from the source."
        }
        whitelist="If true, the \"command-filter\" containing the list of commands to be logged is a whitelist (command must be specfied to be logged), not a blacklist."
    }
    commandspy {
        filter="The blacklist (or whitelist if filter-is-whitelist is true) to use when determining which commands to spy on."
        template="The prefix to use when displaying the player's command."
        usewhitelist="If true, command-filter acts as a whitelist of commands to spy on, else, it functions as a blacklist."
    }
    connection {
        reservedslots="The maximum number of reserved slots that can be used. Set to -1 for unlimited."
        serverfullmessage="If this is not empty, the message to send to players when the server is full."
        whitelistmessage="If this is not empty, the message to send to players when the server is whitelisted."
    }
    connectionmessages {
        disablepermission="If true, those with the \"nucleus.connectionmessages.disable\" permission will not trigger login/logout messages."
        displayprior="If true, will inform players on the server when a player logs on and a name change has been detected."
        displaypriormessage="The message to display to players if a name change has been detected. 'Use {{previousname}} as the token for the player's previous name.'"
        enablefirst="Enables the first time login message."
        enablelogin="Enables changing the login message."
        enablelogout="Enables changing the logout message."
        firsttime="This message uses all the standard Minecraft colour codes, prefixed by \"&\". Use '\"{{name}}\"' for the new player's name."
        loginmessage="Shown when a user logs in. This message uses all the standard Minecraft colour codes, prefixed by \"&\". Use '\"{{name}}\"' for the player's name."
        logoutmessage="Shown when a user logs out. This message uses all the standard Minecraft colour codes, prefixed by \"&\". Use '\"{{name}}\"' for the player's name."
        showall="If \"true\", Nucleus will try to make sure that everyone sees connection messages. Note that plugins can potentially override this."
    }
    cooldown="Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable."
    core {
        accurate="When trying to calculate the number of visitors, having this enabled will include visitors before Nucleus was installed, but may cause incompatibilities with other plugins that do not register data keys during startup. For compatibility, this should be false, for accuracy, this can be true."
        commandonname="If set, this command will be suggested if a player clicks on the user name in chat in templated messages. Use {{player}} to indicate the player name."
        consoleoverrides="If true, commands executed by the console can affect players that normally have an exempt permission against the command."
        datafilelocation="Specifies the path to save nucleus data files in. By default, files are saved at the root. Paths can be relative or absolute.\n\nBE AWARE. Changing this location has the following caveats:\n* This will only take effect after a restart.\n* Files are NOT moved from the old location, you must do this yourself.\n* Files will be in a \"nucleus\" subdirectory of your selected location.\n* If the path indicated cannot be found, this will be ignored. It **must** exist beforehand.\n* Minecraft data (as opposed to Nucleus data) is unaffected.\n\nCommon areas that you might want to put the data directory in are (using UNIX paths):\n* \"config/nucleus\" for data in the Nucleus config data directory\n* \"world\" for storing data in the primary world directory.\n\nDO NOT CHANGE THIS UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING. Most admins do not need to move the data directory and should leave this option as \"default\"."
        kickonstop {
            flag="If true, Nucleus will kick all users just prior to the server stopping."
            message="The message to display to players when restarting the server. Overridden when using the /stop [reason] command."
        }
        language="If set to \"default\", uses the default system language if it exists in Nucleus. If set to a language code, Nucleus will try to use that as the default language. Nucleus is primarily written in \"en-GB\".\n\nCommunity translation support is being explored. Please visit us on Discord to ask how you can help translate Nucleus into your own language."
        offlineusertablimit="Determines the maximum number of offline user entries that are returned for Nucleus commands that allow offline user targeting."
        parentperms="If true, then the permissions \"nucleus.owner\", \"nucleus.admin\", \"nucleus.mod\" and \"nucleus.user\" can be used as permissionsto grant all suggested permissions for these levels. Note that:\n\n* /nucleus setupperms will exist, but will be unnecessary for those using this permission structure\n* Any specific permissions WILL override these permissions (so, setting `nucleus.home.base` to `false` should override `nucleus.user` being true for that specific permission.\n\nThese permissions are designed to avoid the use of the wildcard. Some permissions are not given with these catch-alls, this is by design - the permission to vanish on login (for example) must ALWAYS be given separately."
        safeteleport="These parameters define how far out to check from a specific point when performing a warp. Larger numbers mean that a wider area is checked, but large numbers will cause server lag. The defaults are sufficient in most cases."
        track="If true, if the server detects that a world UUID might have changed, Nucleus will whitelist the server and offer the chance to revert the UUID change, if it detects methods that allow it to do so. You may to turn this off if you are deleting and recreating worlds."
        warmup {
            command="running a command"
            info="If true, cancel a user's warmup on..."
            move=movement
        }
        warning-on-startup="If true and no economy or permission plugin is detected, Nucleus will print a warning on startup. Set this to false if you don't have one of these types of plugins and you're OK with that."
        wildcard="If true, if you log in and have the \"wildcard\" permission (either * or 'nucleus'), you will be warned of the potential issues caused by the wildcard. If you use the wildcard and are happy with this, set this to false."
        worlduuidmigration="If you are having issues because a world UUID changed and you were unable to fix it, this allows you to redirect old UUIDs to new ones (or world names). This is a map of old world UUIDs to new world names or new world UUIDs, the following are both valid:\n\n\"123e4567-e89b-12d3-a456-426655440000\"=\"world\"\n\n\"123e4567-e89b-12d3-a456-426655440000\"=\"1b671a64-40d5-491e-99b0-da01ff1f3341\"\n\nOther plugins will be able to check this map to perform their own migrations, support for that is up to those plugins."
    }
    cost="Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable."
    custommessages="If true, a \"messages.conf\" file will be generated and used to define custom messages."
    deathmessages {
        enable="If \"false\", death messages will be turned off when someone dies."
        showall="If \"true\", Nucleus will try to make sure that everyone sees death messages."
    }
    debugmode="Enables debug mode, which will cause stack traces from commands to be printed to the console."
    enabled="Sets whether a command is enabled."
    environment {
        maxweathertime="The maximum amount of time that the weather can be set to last, in seconds. Set to -1 for no restriction."
    }
    fly {
        onlogin="If true, and the player isn't flying and the player is in the air, Nucleus will try to find a safe location to place the player."
        permissiononlogin="If true, in order to keep fly state on login, the permission for the fly command (nucleus.fly.base) is required. If false, a player without access to the /fly command will fall to the ground on login if they are in the air."
        stateonquit="If true, if a player is flying when they disconnect, this state is remembered. If false, this information is only retained between player disconnects if /fly was used."
    }
    gamemode {
        separate="If true, then changing gamemode using the /gm command requires an extra permission to change to the target gamemode - \"nucleus.gamemode.modes.<gamemode>\""
    }
    geoip {
        onlogin="If true, Nucleus will tell players with the \"nucleus.geoip.login\" permission the country the player is connecting via. Please be considerate with this permission, do not give it to everyone."
    }
    god {
        disablepvp="If true, players that are invulnerable will not be able to attack other players or entities without the nucleus.god.pvp.override permission"
        permissiononlogin="If true, in order to keep invulnerability on login, the permission for the god command (nucleus.god.base) is required. If false, a player without access to the /god will not be invulnerable on login."
    }
    home {
        overhang="If true, if a player has more homes than the permission option \"home-count\" allows, then players will not be able to use any homes until they delete homes to be at the limit again."
        respawnAtHome="If true, on respawn, a player will spawn back at their default home (named \"home\") if it exists."
        safeTeleport="If true, Nucleus will attempt to ensure that users do not get warped into an unsafe situation (for example, if someone breaks blocks around a home)."
    }
    info {
        defaultinfo="If true, when a player runs \"/info\", the section specified in \"default-info-section\" will be used, that is, /info will work the same as /info <default-section>. \nThe list of sections can still be viewed by running \"/info -l\", if the user has the \"nucleus.info.list\" permission. If false, or the section does not exist, this list is shown, regardless of this permission."
        section="If \"use-default-info-section\" is true, this section is displayed when a player runs \"/info\", not the section list."
    }
    item {
        repair {
            restrictions="The list of item types to prevent (or allow if whitelist is true) repairing using /repair"
            whitelist="If true, the restriction list will be used as a whitelist vs a blacklist."
        }
        skullcompat="If true, Nucleus will simply treat /skull as an alias to \"/give [player] skull [number] 3 {SkullOwner:[skullplayer]}\""
    }
    itemdatanode {
        aliases="A set of aliases that Nucleus recognises for this item. They all must be lowercase, and contain only letters, numbers, hyphens or underscores."
    }
    itemstacksnapshot {
        data="Sponge could not deserialise custom data on {0}. The data has been temporarily removed."
        unable="Sponge could not deserialise the {0}. It has been temporarily removed."
    }
    jail {
        commands="The commands that players are allowed to execute in jail. Do not include the slash."
        countonlineonly="If true, jail time will only tick down when players are online."
        muteWhenJailed="If true, the player will be muted when in jail."
        unjail="If true, then the permission \"nucleus.jail.unjail\" is required to unjail players."
    }
    jump {
        maxdist="The maximum distance a player can move using the /jump command. Negative values mean infinite - use with care."
    }
    kits {
        full="If true, any items that couldn't be placed in the player's inventory will be dropped on the floor around them."
        mustgetall="If this is true, \"drop-items-if-inventory-full\" will be ignored, and the kit will only be consumed if everything can be consumed."
        process-tokens="If true, any tokens such as {{name}} and {{displayname}} will be translated on item names and lore, if they exist, when kits are redeemed."
        separate="If this is set to true, each kit has its own permission node - nucleus.kits.<name>."
    }
    main-header="Welcome to Nucleus {0}. This is the main configuration file.\n\nIf you're having issues with Nucleus, we have different support options for you:\n\n* Ore: https://ore.spongepowered.org/Nucleus/Nucleus\n* Nucleus Docs: https://nucleuspowered.org/docs\n* Real life people in Discord: https://discord.gg/MC2mAuS\n\nThank you for using Nucleus! \n=============================================================="
    message {
        helpop {
            prefix="The prefix to any message received via /helpop."
        }
        receiver {
            prefix="The prefix for received messages. This is displayed to the receiever. Use {{from}} and {{to}} for the message sender/receiver, {{fromDisplay}} or {{toDisplay}} for the display names."
        }
        sender {
            prefix="The prefix for sent messages. This is displayed to the sender. Use {{from}} and {{to}} for the message sender/receiver, {{fromDisplay}} or {{toDisplay}} for the display names."
        }
        socialspy {
            customlevel="The social spy level of any custom target that has been registered through the API."
            force="If true, Nucleus will check the \"nucleus.socialspy.force\" permission on the subject to disallow disabling Social Spy."
            levels="If true, Nucleus will check the \"nucleus.socialspy.level\" option on the subject for an integer level. A level can see their messages from and to players with levels below their own, \nunless \"same-levels-can-see-each-other\" is set to true, in which case, social spies can see messages from their own level. Players have a default level of 0."
            msgtoggle="The tag to show at the beginning of a Social Spy message when a player cannot send a message to a player who hasused /msgtoggle (blocking messages from all players)."
            mutedshow="If true, show messages that players try to send and are cancelled (usually due to being muted)."
            mutedtag="The tag to show at the beginning of a Social Spy message when a player is muted (or otherwise has the message cancelled)."
            playeronly="If true, only messages sent by players will be visible via Social Spy."
            prefix="'The prefix and format for messages sent to social spies. Use {{from}} and {{to}} for the message sender/receiver, {{fromDisplay}} or {{toDisplay}} for the display names. The colours and style at the end of the prefix will be carried over into the message.'"
            samelevel="If true, and \"use-levels\" is true, players with social spy will also see messages from players at their own level."
            serverlevel="The server's social spy level."
            serverlevels="Sets the social spy level of the server and any custom message targets."
            spyon="Controls the types of *sender* that can be spied on."
        }
    }
    misc {
        speed {
            max="Sets the maximum speed that a player can set via the /speed command."
        }
    }
    mobspawn {
        maxamt="The maximum number of mobs that can be spawned using /spawnmob."
        permob="If true, Nucleus will make an additional permission check to check whether a player can spawn a mob.\nThe permission is \"nucleus.spawnmob.mobs.<mobid>\", where the mobid has any \":\" (colons) replaced with \".\" (period). So, the permission to spawn a creeper would be \n\"nucleus.spawnmob.mobs.minecraft.creeper\". This allows server owners to allow all vanilla mobs with the permission \"nucleus.spawnmob.mobs.minecraft\"."
    }
    module {
        admin {
            desc="Provides administrative commands"
        }
        afk {
            desc="Allows users to go AFK"
        }
        back {
            desc="Allows users to return to a previous point after teleporting"
        }
        ban {
            desc="Enhances the Minecraft ban system"
        }
        chat {
            desc="Allows for the formatting of chat to potentially include player prefixes, nicknames and other information"
        }
        chat-logger {
            desc="Logs chat in separate files for easier searching"
        }
        command-logger {
            desc="Logs command usage on the console, in separate files for easier searching"
        }
        command-spy {
            desc="Allows users with permission to see commands that other players are executing in real time"
        }
        connection {
            desc="Allows for finer grain control over whether players can join the server, and the message non whitelisted players would see."
        }
        connection-messages {
            desc="Controls the messages players see when someone joins or leaves the server"
        }
        crafting-gui {
            desc="Allows for virtual crafting tools to be used via commands"
        }
        death-message {
            desc="Controls whether death messages are displayed"
        }
        environment {
            desc="Utilities to contol the world environments"
        }
        fly {
            desc="Commands and listeners to allow players to fly"
        }
        freeze-subject {
            desc="Allows for freezing players in place"
        }
        fun {
            desc="Fun commands for the server that do not (generally) have side effects"
        }
        geo-ip {
            desc="Display the likely location of a player"
        }
        home {
            desc="Provide personal warps for players"
        }
        ignore {
            desc="Allows players to ignore others in chat"
        }
        info {
            desc="Lets users see more information about the server, provided by server owners in text files"
        }
        inventory {
            desc="Allows for investigating others' inventories"
        }
        invulnerability {
            desc="Allows for players to become invulnerable"
        }
        item {
            desc="Allows for the maniuplation of items, including names, lore and enchantments"
        }
        jail {
            desc="Enables jails, for punishing players"
        }
        jump {
            desc="Enables warping to nearby locations"
        }
        kick {
            desc="Enhances the Minecraft kick function"
        }
        kit {
            desc="Allows servers to provide players with kits of items and commands, that can be run on demand or automatically"
        }
        mail {
            desc="Allows users to send semi-permanent mails to each other"
        }
        message {
            desc="Enhances the Minecraft whisper functions"
        }
        misc {
            desc="Miscellaneous functions"
        }
        mob {
            desc="Controls the spawning of mobs"
        }
        mute {
            desc="Enables preventing players from sending chat messages to the server"
        }
        nameban {
            desc="Bans players with pre-determined names (rather than UUIDs)"
        }
        nickname {
            desc="Allows players to have nicknames that are different from their Minecraft name"
        }
        note {
            desc="Allows staff to make notes on players, for server record keeping"
        }
        playerinfo {
            desc="Adds commands to display information about players"
        }
        powertool {
            desc="Allows users to bind commands to items, to activate on item use"
        }
        protection {
            desc="Adds basic crop trampling and mob griefing protection"
        }
        rtp {
            desc="Allows players to teleport to a random location"
        }
        rules {
            desc="Adds a rules command"
        }
        server-list {
            desc="Allows for modification of the server list entry for the server"
        }
        server-shop {
            desc="Adds a simplistic command based server shop for buying and selling items"
        }
        sign {
            desc="Makes it easy to add formatting to signs"
        }
        spawn {
            desc="Controls the player spawning mechanics of the server"
        }
        staff-chat {
            desc="Adds a chat channel for server staff"
        }
        teleport {
            desc="Adds functions for teleporting players to/from other players, offline teleports and positional teleports"
        }
        vanish {
            desc="Allows players to go invisible"
        }
        warn {
            desc="Adds a simple warning system for minor rule breaks, which can automatically punish the player."
        }
        warp {
            desc="Adds a public warp point system"
        }
        world {
            desc="World management, including world borders"
        }
    }
    module-desc="+------------------------------------------------------------+\n|                          Modules                           |\n|                                                            |\n| Set to:                                                    |\n|   ENABLED: to enable the module                            |\n|   DISABLED: to disable the module                          |\n|   FORCELOAD: to enable the module and prevent plugins from |\n|              disabling it.                                 |\n|                                                            |\n| Don't change the section name from \"-modules\", it's meant  |\n| to be called that to put the modules at the top!           |\n+------------------------------------------------------------+"
    modules="Set each module to {0} (load unless another plugin requests it should be disabled), {1} (always load regardless, plugins cannot disable) or (2) (never load)."
    motd {
        delay="The amount of time to wait (in seconds) before sending the MOTD to a player who has just logged in."
        onjoin="If true, show players the MOTD as defined in \"motd.txt\" when they log onto the server."
        pagination="If false, this disables the pagination system for the MOTD. Set this to false if you have one page, do not want a title, and do not want the << >> marks to appear, otherwise, it is recommended to set this to true."
        title="The title to show at the top of each MOTD page. Colour codes are supported. If blank, this hides the title completely."
    }
    mute {
        blocked="Commands to block when muted. This is in addition to chat and /m already being blocked."
        countonlineonly="If true, mute time will only tick down when players are online."
        maxmutelength="The maximum length a mute may last for (in seconds) unless the user handing the mute has a bypass permission. Set to -1 for no maximum."
        seemutedchat="If true, those with the \"nucleus.mute.seemutedchat\" permission will see chat from those who are muted."
        seemutedchattag="The tag to prepend any cancelled/muted messages with."
        unmute="If true, then the permission \"nucleus.mute.unmute\" is required to unmute players."
    }
    nicknames {
        max="The maximum number of visible characters that the nickname can be."
        min="The minimum number of visible characters that the nickname can be."
        pattern="A regular expression that limits what form the nickname can take. If Nucleus fails to read the regex here, the default of \"[a-zA-Z0-9_]+\" (the same restriction as Minecraft usernames) will be used. To allow all characters, use \".+\"."
        prefix="A prefix to any nickname that is displayed in chat."
    }
    note {
        showonlogin="If true, users with the permission nucleus.note.showonlogin will be shown a users notes when they login. If false, they will not."
    }
    playerinfo {
        list {
            aliasonly="If true, if an alias hasn't been defined for a group in the `group-aliases` section, it's considered as part of the `default` group."
            defaultname="If listing by groups is enabled, the group name to display when a player is not in a group."
            groupaliases="If listing by groups is enabled, then any group listed here (on the left side of an equals sign) will be given the display name on the right hand side.\nMultiple groups can be given the same alias, they will be grouped together."
            grouporder="Any group aliases in this list will be listed in this order, above all other groups, which will be displayed in alphabetical order below."
            groups="If enabled, list players by their groups."
            panel="Enable this if you are using a server panel, such as Multicraft or PterodactylPanel. This will run /minecraft:list when /list is run on the console."
            template="The template to use to display a player's name. Uses the same tokens as chat. Defaults to \"{{displayname}}\"."
        }
        seen {
            extended="If true, the permission \"nucleus.seen.extended\" is required for all information that comes from modules. If false, information will be displayed based on the command permissions a player has (so, a player with check ban rights can see banning information)."
        }
    }
    printonautosave="Prints to console when a Nucleus save is occurring."
    protection {
        disablecrop="Disables crop trampling."
        mobgriefing {
            flag="If true, mob griefing will be disabled except for the entities listed in the whitelist (which should be done by mob ID)."
        }
    }
    rtp {
        attempts="The number of times to try to find a safe teleport spot when using /rtp before failing. Setting this too low may cause a high rate of failures."
        defaultmethod="The default RTP kernel to use with /rtp. The default options are:\n\n* \"nucleus:default\": standard RTP, with the min/max radius centred around the spawn point\n* \"nucleus:surface_only\": RTP which will attempt to only pick a surface (must see sky) location, with the min/max radius centred around the spawn point\n* \"nucleus:around_player\": RTP which is like default, but the random position will depend on the player's current position, not the spawn point\n* \"nucleus:around_player_surface\": RTP which is like surface only, but the random position will depend on the player's current position, not the spawn point\n\nOther plugins might add their own kernels, in which case they will give you an ID to use here."
        defaultworld="If this is set, and the world name here matches one of your worlds (case-sensitive!), then `/rtp` will default to use the world specified here. Otherwise, the player's current world will be used."
        max-y="The maximum Y value that can be teleported to."
        min-y="The minimum Y value that can be teleported to."
        minradius="The minimum radius from the centre of the world/world border where /rtp will warp to."
        onplayer="If true, the rtp will based around the player, not the world centre"
        perworldperms="If true, Nucleus will check the permission \"nucleus.rtp.worlds.<worldname>\" (where worldname is in lower case) before allowing an RTP attempt to go through."
        perworldsect="If a world is listed below with a valid config section, it will take precedence over the global section. World names should be lower case (so, standard nether should be \"dim-1\".\n\nCopy the example block and paste it below, with the correct world name, to set the per-world options."
        prohibitedbiomes="A list of biomes that RTP should not attempt to teleport into."
        radius="The maximum radius from the centre of the world/world border where /rtp can warp to. This will not override the world border radius."
        surface="If true, /rtp will only try to teleport players to the surface, and not into caves."
    }
    rules {
        title="The rules page title."
    }
    serverlist {
        hideall="If true, the player count will not be displayed."
        hidevanished="If true, any player that is vanished on the server will not appear in the online player list on the server list."
        messages="'Potential messages that could be sent to the player. To split over two lines, include \\n where you want the line break to appear.'"
        modify="If \"true\", when a prospective player pings the server on the multiplayer server list, one of the messages in the list below will be sent to the player. If \"whitelist\", this module will only act when the whitelist is enabled."
        whitelistmessages="'Potential messages that could be sent to the player when the server is whitelisted. To split over two lines, include \\n where you want the line break to appear.\n\nIf no entries are here, the MOTD will use the `server-list-messages` list.'"
    }
    servershop {
        maxpurchasable="The maximum amount a player can buy in one transaction."
    }
    spawn {
        bedspawn="If true, if a respawn would be back to a bed, Nucleus will override that, if false, Nucleus will ignore bed spawns."
        forcefirstspawn="If true, then Nucleus will attempt to force players joining for the first time to spawn at the *direct point* that first spawn has been set.\nOnly set this if you want Nucleus to override all other plugins on first spawn."
        global {
            base="This section controls whether respawning and /spawn work on a per world or global server basis"
            oncommand="If true, running /spawn sends the player to the world specified in \"target-spawn-world\", if false, sends them to the world spawn."
            onlogin="If \"spawn-on-login\" is on and this is true, sends the player to the world specified in \"target-spawn-world\" when they log in."
            onrespawn="If true, respawning (like from death) sends the player to the world specified in \"target-spawn-world\", if false, sends them to the world spawn."
            target="The name of the world to use as the server spawn. If this is invalid, the default world is used instead."
        }
        onlogin="If true, players will be sent to the default world spawn on login, unless they are sent to the first login spawn, or they have the \"nucleus.spawn.exempt.login\" permission."
        onloginsameworld="If \"spawn-on-login\" is true, if a player logs in and is on any of the worlds listed here, they will NOT be redirected to the spawn point.\n\nThis supports both world names and world UUIDs."
        safe="If true, using /spawn will attempt to find a safe place. If false, the teleportation will always directly send the player to the location with no safety checks."
        worlds="If true, players require the permission \"nucleus.spawn.worlds.<worldname>\" to spawn in a specific world, where worldname is the name of the world in lowercase."
    }
    staffchat {
        colour="A Minecraft colour code the denotes the colour to display Staff Chat channel messages in."
        "includestd"="If true, Nucleus will include all the normal chat tags in the message, in addition to the prefix."
        template="'The prefix to the staff chat message. Use the following tokens: {{prefix}} - prefix (set as an option in a permission plugin), {{suffix}} - suffix (set as an option in a permission plugin), {{name}} - real name, {{displayname}} - display name.'\nIf \"include-standard-chat-formatting\" is set to \"true\", the formatting will be appended to this prefix."
    }
    teleport {
        quiet="If true, by default, a target player will not be informed that they have been /teleport ed to. Override using \"-q false\""
        safe="If true, teleporting tries to find a safe place for players."
        warmup="The time, in seconds, that a player must remain still before teleportation. Players with \"nucleus.teleport.exempt.warmup\" or admin permissions will be exempt from this."
    }
    tempban {
        maxtempbanlength="The maximum length a temporary ban may last for (in seconds) unless the user handing the mute has a bypass permission. Set to -1 for no maximum."
    }
    thru {
        maxdist="The maximum distance a player can move using the /thru command. Negative values mean infinite - use with care."
    }
    unstuck {
        height="The maximum distance vertically /unstuck can send you."
        radius="The maximum distance horizontally /unstuck can send you."
    }
    vanish {
        altertablist="[EXPERIMENTAL - use with caution] If true, Nucleus will try to alter the tab list when a player vanishes."
        connectionmessages="If true, players who leave or join the server under vanish will not have a login or logout message broadcast."
    }
    warmup="Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable."
    warn {
        actioncommand="The command to execute when a player has a specific number of warnings."
        defaultlength="The default length a warning is set to if no length is provided (in seconds). Set to -1 for no maximum."
        expire="If true, a record of players warnings will be kept as 'expired warnings'. If false, they will not."
        maxwarnlength="The maximum length a warning may last for (in seconds). Set to -1 for no maximum."
        minwarnlength="The minimum length a warning will last before expiring (in seconds). Set to -1 for no minimum."
        showonlogin="If true, players will be shown all their warnings when they login. If false, they will not."
        warningsbeforeaction="The number of active warnings a player must accumulate before the action command is executed. Set to -1 to disable."
    }
    warps {
        categories="If true, warps will be displayed by category in /warp list."
        cost="The default cost for a warp. Can be overriden using /warp setcost <warp> <cost>"
        descinlist="If true, the warp description will be shown in /warp list, and the co-ords will be shown in the tooltip on hover."
        safe="If true, using /warp will attempt to find a safe place. If false, the teleportation will always directly send the player to the location with no safety checks."
        separate="If this is set to true, each warp has its own permission node - nucleus.warps.<name>."
    }
    world {
        defaultborder="If positive, any new worlds that are created using \"/world create\" (or \"/nworld create\") will automatically get a world border that has this diameter (that is, from border to border). Set to 0 or a negative number to disable."
        gen {
            each="If true, then players with the \"nucleus.world.border.gen.notify\" permission will get an update on progress after each generation. Recommended to be off, because it can be VERY spammy."
            notify="Time, in seconds, between notifications in chat warning players a pre-gen is in progress."
            warning="If true world generation will warn players on the server that a pre-generation is in progress periodically."
        }
    }
    worlds {
        gamemode="If true, joining or changing worlds will change the gamemode of a player unless they have the Minecraft permission \"nucleus.world.force-gamemode.override\""
        separate="If true, changing worlds requires permission to access the target world - \"nucleus.worlds.<worldname>\""
    }
}
cooldown {
    message="&cYou can't run this command for another &e{0}&c."
}
core {
    permission {
        wildcard="&4WARNING"
        wildcard2="&cYour player has the `nucleus` or `*` permission set. This is not recommended. Side effects may include not being able to go AFK and being vanished on login."
        wildcard3="&cWe recommend using our `nucleus setupperms` command to setup your permissions instead."
        wildcard4="&cClick here or visit the Nucleus ore site for an explanation for why the wildcard is bad."
        wildcard5="&c(This message may also be disabled using the config, disable \"core.check-for-wildcard\")"
    }
    savetask {
        complete="Saving complete."
        starting="Starting Nucleus save task..."
    }
}
cost {
    complete="&aYou were charged &e{0}&a to run that command."
    error="&cThe command could not be run due to an error with the Economy service."
    nofunds="&cYou do not have the required &e{0} &cto run that command."
    refund="&aYou were refunded &e{0}&a."
}
freeze {
    cancelinteract="&cYou cannot interact with entities while frozen."
    cancelinteractblock="&cYou cannot interact with block while frozen."
    cancelmove="&cYou cannot move while frozen."
}
gameprofile {
    new="&eThe user {0} has not logged onto the server before. They have been added to the system."
}
geoip {
    noinfo="& e [ядро GeoIP] не может определить, где & r {0} & eis, подключение."
    playerfrom="& e [ядро GeoIP] & r {0} & eis, подключение из {1}."
}
globalmute {
    novoice="&cYou cannot speak as the server is globally muted."
}
home {
    location=": [world: {0}, location: {1}, {2}, {3}]"
    title {
        name="&aHomes (&e{0}&a)"
        normal="&aHomes"
    }
    warphover="Click here to warp to {0}."
    warphoverinvalid="&cThis home is pointing to an invalid location and cannot be used."
}
info {
    load {
        duplicate="Duplicate file name detected - {0}. It has not been loaded - note that case does not matter."
    }
}
jail {
    abouttoteleportcause {
        targetisjailed="&cYou cannot teleport to &f{0} &cbecause they are jailed."
    }
    abouttoteleporttarget {
        isjailed="&cYou cannot teleport &f{0} &cbecause they are jailed."
    }
    elapsed="&aYou have served your time and are now unjailed."
    isjailed="&cPlayer is jailed."
    muteonchat="&cYou cannot speak whilst in jail."
    playernotify {
        standard="&cYou are jailed and cannot interact."
        time="&cYou are jailed and cannot interact for &e{0}&c."
    }
    teleportcause {
        isjailed="&cYou cannot send teleport requests because you are jailed."
    }
    teleporttarget {
        isjailed="&cYou cannot send teleport requests to &f{0} &cbecause they are jailed."
    }
}
kit {
    cannotrename="The kit {0} cannot be renamed to {1} as the kit {1} exists."
    exists="The kit {0} already exists."
    noexists="The kit {0} does not exist."
}
language {
    default="Nucleus language set to default (en-GB)"
    set="Nucleus language set to \"{0}\""
}
list {
    listener {
        multicraftcompat="Multicraft compatibility has been enabled. To use the Nucleus list command from the console, use /ls."
    }
}
loader {
    mixinrequired {
        command="Will not load the command \"{0}\", requires mixin plugin."
        listener="Will not load the listener \"{0}\", requires mixin plugin."
        runnable="Will not load the runnable \"{0}\", requires mixin plugin."
    }
    nomixinrequired {
        command="Will not load the command \"{0}\", requires that there is no mixin plugin."
        listener="Will not load the listener \"{0}\", requires that there is no mixin plugin."
        runnable="Will not load the runnable \"{0}\", requires that there is no mixin plugin."
    }
}
mail {
    header="&bClick on the sender's name for more information."
    login="&aYou have &e{0} &amail(s) in your inbox."
    title {
        filter {
            other="&aMail (&e{0}&a - Filtered)"
            self="&aMail (Filtered)"
        }
        nofilter {
            other="&aMail (&e{0}&a)"
            self="&aMail"
        }
    }
    toclear="&ato delete them."
    toread="&ato read them."
    youvegotmail="&eYou have just received a mail from"
}
message {
    blocked="&cYou message could not be sent because {0} is not currently accepting private messages."
    cancel="&cYour message could not be sent."
    noreply="&cThere is no-one for you to reply to."
}
motd {
    title="&6MOTD"
}
mute {
    elapsed="&aYou are no longer muted."
    playernotify {
        standard="&cYou are muted and cannot speak."
        time="&cYou are muted and cannot speak for &e{0}&c."
    }
}
name {
    hover {
        command="&eClick to suggest: &f&o{0}"
        ign="&eIGN: &f{0}"
    }
}
note {
    login {
        notify="&e{0} &ahas &e{1} &anote(s). To view &eclick this message."
        view="&aClick to view notes for &e{0}."
    }
}
nucleus {
    couldntcreate="Could not create the data directory. Data may not get saved."
    custompath {
        error="Could not find the directory \"{0}\" for data storage. Falling back to \"{1}\"."
        info="Custom data path has been set, saving user data to \"{0}\"."
    }
    eventcancelled="&cA plugin cancelled that action. No reason was given."
    injector {
        duplicate="Attempted to register the class {0} in Guice when it has already been registered. Skipping."
    }
    module {
        disabled {
            forceload="The plugin {0} ({1}) has requested that the module {2} be disabled, but it's set to force load, so it's being loaded anyway."
            forceloadtwo="Be aware: this might cause conflicts with the {0} and so things might not work perfectly."
            modulerequest="The plugin {0} ({1}) has requested that the module {2} be disabled. It will not be loaded."
        }
    }
    token {
        currentworld="The current world of the player, if a player is accessing this."
        displayname="The display name, or nickname, of the player."
        ipaddress="The IP address of the user."
        maxplayers="The maximum number of players your server can support."
        name="The in-game name of the player."
        onlineplayers="The number of players online on your server."
        player="The in-game name of the player."
        playerdisplayname="The in-game name of the player."
        prefix="The player's prefix, as defined by the \"prefix\" option in your permissions plugin."
        suffix="The player's suffix, as defined by the \"suffix\" option in your permissions plugin."
        time="The current time in the world of the player, if a player is accessing this."
        uniquevisitor="The estimated unique visitor count for the server."
    }
}
permission {
    afk {
        exempt {
            kick="Prevents the user from being kicked for being AFK for too long."
            toggle="Prevents the user from going AFK."
        }
        notify="If kick notifications are not sent to the server, players with this permission will still get these notifications."
    }
    back {
        ondeath="Sets the player's /back location on death"
        onportal="Sets the player's /back location on portal teleports."
        onteleport="Sets the player's /back location on returnable teleports."
    }
    ban {
        exempt {
            target="Exempts the user from being a target of the /ban command."
        }
        notify="Notifies the user about bans when they occur."
        offline="Allows the user to ban offline users."
    }
    base="Allows the user to run the command /{0}"
    blockinfo {
        extended="Displays properties and traits associated with the block."
    }
    chat {
        color="Allows user to type colors in chat."
        colorsingle="Allows user to type a single color in chat."
        colorspec="Allows user to use the color \"{0}\" (&{1}) in chat."
        colour="Allows user to type colours in chat."
        colourspec="Allows user to use the colour \"{0}\" (&{1}) in chat."
        magic="Allows user to use magic characters in chat."
        style="Allows user to use styles in chat."
        stylesingle="Allows user to type a single style in chat."
        stylespec="Allows user to use the \"{0}\" style (&{1}) in chat."
        urls="Allows user to type clickable URLs in chat."
    }
    commandspy {
        exempt {
            target="If granted, prevents commands from this player being sent to other command spies."
        }
    }
    connection {
        joinfullserver="Allows the user to join the server even if full."
    }
    connectionmesssages {
        disable="If set in config, players with this permission will not trigger a connection message."
    }
    enchant {
        unsafe="Allows setting enchantments and levels that are not ordinarily available to the held item."
    }
    enderchest {
        exempt {
            inspect="Prevents the player from being a target for /enderchest"
            modify="Prevents the player from having their ender chest modified by others."
        }
        modify="Allows the user to modify others' ender chests."
        offline="Allows the user to inspect offline players' ender chests."
        others="Allows the user to inspect other players' ender chests."
    }
    entityinfo {
        extended="Displays data associated with the entity."
    }
    exempt {
        cooldown="Allows the user to bypass the cooldown for /{0}"
        cost="Allows the user to bypass the cost for /{0}"
        warmup="Allows the user to bypass the warmup for /{0}"
    }
    gamemode {
        modes {
            adventure="Allows the user to change a target's gamemode to adventure."
            creative="Allows the user to change a target's gamemode to creative."
            spectator="Allows the user to change a target's gamemode to spectator."
            survival="Allows the user to change a target's gamemode to survival."
        }
        other="Allows the user to change the gamemode for any user."
    }
    geoip {
        login="Отображает игрок страны на вход, если в конфигурацию включен."
    }
    getpos {
        others="Allows the user to view the position of other players."
    }
    god {
        pvp {
            override="Allows the user to attack players when invulnerable, if the PvP disable on invulnerability feature is set."
        }
    }
    helpop {
        receive="Allows the user to receive message via /helpop"
    }
    home {
        other {
            exempt {
                target="If granted, other players cannot warp to your homes using /homeother"
            }
        }
    }
    homes {
        unlimited="Allows the user to have an unlimited number of homes."
    }
    ignore {
        chat="Exempts the user from having their chat, messages and mail ignored."
    }
    info {
        list="If granted, the player can run /info -l to see all the available info sections."
    }
    inventory {
        keep="Causes the player to keep their inventory on death."
    }
    invsee {
        exempt {
            inspect="Prevents the player from being a target for /invsee."
            interact="Prevents the player from having their inventory interacted with."
        }
        modify="Allows the player to modify others' inventories."
        offline="Allows the player to look at offline players' inventories."
    }
    iteminfo {
        extended="Displays data associated with the item."
    }
    jail {
        exempt {
            target="Exempts the user from being jailed."
        }
        notify="Notifies the user about jails when they occur."
        offline="Allows the user to jail offline users."
        teleportjailed="Allows the player to teleport jailed players."
        teleporttojailed="Allows the player to teleport to jailed players."
        unjail="If set in config, this permission is required to unjail players."
    }
    kick {
        exempt {
            target="Exempts the user from being a target of the /kick command."
        }
        notify="Notifies the user about kicks when they occur."
    }
    kickall {
        whitelist="Allows the user to turn the whitelist on when kicking all players."
    }
    kit {
        exempt {
            cooldown="Allows the user to bypass kit cooldowns."
            onetime="Allows the user to use one time kits multiple times."
        }
        give {
            override="Allows the user to grant kits to those who would not ordinarily be able to obtain a kit using the -i flag."
        }
        showhidden="Shows the user hidden kits in /kits"
    }
    kits="Allows the user to use all kits."
    kittycannon {
        break="If granted, the user can use the -b flag to break blocks with exploding ocelots."
        damage="If granted, the user can use the -d flag to damage entities with exploding ocelots."
        fire="If granted, the user can use the -f flag to cause fires with exploding ocelots."
    }
    list {
        seevanished="Allows the user to see vanished players in /list."
    }
    message {
        color="Allows user to type colors into messages."
        colour="Allows user to type colours into messages."
        magic="Allows user to use magic characters into messages."
        style="Allows user to use styles into messages."
        urls="Allows user to type clickable URLs into messages."
    }
    motd {
        join="If granted, the user will see the MOTD when joining the server."
    }
    msgtoggle {
        bypass="Allows the user to send a message to players that have set \"/msgtoggle\" to false."
    }
    mute {
        exempt {
            length="Allows the user to bypass the maximum mute length."
            target="Exempts the user from being a target of the /mute command."
        }
        notify="Notifies the user about mutes when they occur."
        seemutedchat="If true and enabled in the config, players with this permission will see chat from muted players."
        unmute="If set in config, this permission is required to unmute players."
    }
    nick {
        color="Allows the user to color their nickname."
        colorsingle="Allows user to use a single color in nicknames."
        colorspec="Allows user to use the color \"{0}\" (&{1}) in nicknames."
        colour="Allows the user to colour their nickname."
        colourspec="Allows user to use the colour \"{0}\" (&{1}) in nicknames."
        magic="Allows the user to use \"magic\" characters in their nickname."
        others="Allows the user to change other's nicknames."
        style="Allows the user to style their nickname."
        stylesingle="Allows user to use a single style in nicknames."
        stylespec="Allows user to use the \"{0}\" style (&{1}) in nicknames."
    }
    note {
        notify="Notifies the user about notes when they occur."
        showonlogin="Allows user to see other users notes when they login."
    }
    others="Allows the user to target other players using the command \"{0}\"."
    repair {
        flag {
            all="Allows the user to repair a player's entire inventory."
            equip="Allows the user to repair a player's entire equip."
            hotbar="Allows the user to repair a player's entire hotbar."
            offhand="Allows the user to repair a player's entire offhand."
        }
    }
    rtp {
        worlds="The base permission for per-world permission, if allowed in the config. This permission can be suffixed with \".worldname\" (in lowercase) to allow for per-world rtp permissions."
    }
    seen {
        extended="Allows the user to see extended information about a player in /seen."
        extendedperms {
            firstplayed="Allows the executor to see when the player first joined the server."
            flying="Allows the executor to see if the player can fly by double jumping, and if they are flying."
            gamemode="Allows the executor to see the player's current game mode."
            ip="Allows the executor to see the player's IP."
            lastplayed="Allows the executor to see the date when the player was on the server."
            location="Allows the executor to see the player's current location."
            speed="Allows the executor to see the current walking and flying speeds of the player."
            uuid="Allows the executor to see the player's UUID."
        }
    }
    sign {
        formatting="Allows user to use text formatting on signs."
    }
    socialspy {
        force="If granted, along with the \"nucleus.socialspy.base\" permission, the target player cannot turn social spy off."
    }
    spawn {
        exempt {
            login="If granted, and the configuration is set to send players to spawn on login, this permission will prevent the player from going to spawn on login."
        }
        force="Allows the user to attempt to force teleportation to spawn."
        otherworlds="Allows the user to go to another world's spawnpoint."
        worlds="If set in the main config, this permission will give players access to spawn in all worlds. Adding the name of the lowercase name world as a child of this permission will grant permission for that world only (that is, ending with \"worlds.world\" for the world \"world\")."
    }
    spawnmob {
        mob="If \"mob.separate-mob-spawning-permissions\" is true, then this permission will allow a user to spawn all living mob types in. \nA specific spawnmob permission is \"nucleus.spawnmob.mob.<mobid>\", where the mob's id, such as \"minecraft:creeper\", will have the colon (:) replaced with a period (.), thus, the permission for a creeper is \"nucleus.spawnmob.mob.minecraft.creeper\"."
        other="Allows the user to spawn a mob on another player."
    }
    spawnother {
        offline="Allows the user to send a player to spawn on their next login."
    }
    speed {
        exempt {
            max="Allows the user to specified a speed greater than the max speed set in the config file."
        }
    }
    sudo {
        exempt="Exempts the user from being a target of the /sudo command."
    }
    teleport {
        force="Allows the user to \"force\" teleport to a point, regardless of whether it is safe to do so."
        offline="Allows the user to teleport to the location of players who are offline."
        others="Allows the user to teleport other players."
        quiet="Allows the user to use the \"-q\" flag to override whether to tell the target player if a teleport is being performed."
    }
    tempban {
        exempt {
            length="Allows the user to bypass the maximum tempban length."
            target="Exempts the user from being a target of the /tempban command."
        }
        offline="Allows the user to temp ban offline users."
    }
    tphere {
        offline="Allows the user to teleport players who are offline to their current location on next login."
    }
    tppos {
        border="If granted, allows the user to the use \"-b\" flag to attempt to warp outside of the border."
    }
    tptoggle {
        exempt="Allows the user to teleport to anyone, regardless of whether they have turned on /tptoggle protection."
    }
    vanish {
        onlogin="If granted, the target player will always logon vanished."
        other="If granted, grants ability to vanish other players."
        persist="If granted, the player is able to retain their vanish status upon logout and login."
        see="If granted, and the version of Sponge/Nucleus supports this, allows players to see other vanished players and tab their names in commands."
    }
    voice {
        auto="Automatically grants the user voice if a global mute is in effect."
        notify="If granted, this user is told when a player's voice status is changed."
    }
    warn {
        exempt {
            length="Allows the user to bypass the maximum and minimum warning lengths."
            target="Exempts the user from being a target of the /warn command."
        }
        notify="Notifies the user about warnings when they occur."
        showonlogin="Allows user to see other users warnings when they login."
    }
    weather {
        exempt {
            length="Allows the user to bypass the maximum weather length."
        }
    }
    world {
        border {
            gen {
                notify="If granted and enhanced generation is being used, these players are notified of progress to the generation."
            }
        }
        force-gamemode {
            override="If granted and the Nucleus per-world gamemodes are enforced, the player will not have their gamemode changed."
        }
        seed="Allows the user to see world seeds."
        teleport {
            other="Allows the user to teleport other players to other worlds."
        }
    }
}
permissions {
    warp {
        other="Allows the user to send other players to warps they have access to."
    }
    warps="Allows the user to access all warps if per-warp permissions is turned on."
}
powertool {
    playeronly="&cThis powertool requires you to attack a player to run the command."
}
seen {
    error {
        pluginregistered="This plugin has already registered a provider."
        requireplugin="The plugin (annotated with @Plugin) must be provided as the plugin object."
    }
    frozen="&bFrozen: &c&oYes."
    godmode="&bInvulnerable (Nucleus God mode): &f{0}"
    header {
        modules="&bModules"
        plugins="&bPlugins"
    }
    isbanned {
        perm="&bBans: &c&oPermanently banned."
        temp="&bBans: &c&oTemporarily banned for {0}."
    }
    isjailed {
        perm="&bJails: &c&oPermanently jailed."
        temp="&bJails: &c&oTemporarily jailed for {0}."
    }
    ismuted {
        perm="&bMutes: &c&oPermanently muted."
        temp="&bMutes: &c&oTemporarily muted for {0}."
    }
    msgtoggle="&bAccepting Private Messages: &f{0}"
    notbanned="&bBan: &fNot banned."
    notes="&bNotes: &f{0} notes attached."
    notfrozen="&bFrozen: &fNo."
    notjailed="&bJail: &fNot jailed."
    notmuted="&bMute: &fNot muted."
    socialspy="&bSocial Spy: &f{0}"
    socialspylevel="&bSocial Spy Level: &f{0}"
    warnings="&bWarnings: &f{0} active, {1} expired."
}
spawn {
    firstspawn {
        failed="Could not place the player {0} at the first spawn point."
    }
}
standard {
    accept=Принять
    action {
        delete="[Удалить]"
        expire="[Истечь]"
        return="[Вернуть]"
    }
    alljails="all jails"
    buyfrom="buy from the server"
    clicktoseemore="Click here to see more."
    day=day
    days=days
    delete="[Удалить]"
    deny=Отклонить
    disabled=выключено
    enabled=включено
    error {
        nouser="Could not get user data"
    }
    "false"=нет
    flying=flying
    for=for
    hour=hour
    hours=hours
    inamoment=moment
    line="&e==================================================================="
    minute=minute
    minutes=minutes
    muted=muted
    nocooldown="no cooldown"
    noeconplugin="&eWARNING: Nucleus could not detect an economy plugin."
    noeconplugin2="&eWhile one is not required to use Nucleus, you cannot set costs on commands and kits."
    none=нет
    nopermplugin="&eWARNING: Nucleus could not detect a permissions plugin."
    nopermplugin2="&eWhile one is not required to use Nucleus, it is HIGHLY recommended."
    now=now
    off=выкл
    on=вкл
    reason="Reason: {0}"
    reasoncoloured="&aReason: &e{0}"
    reply="[Ответить]"
    restoftime="The rest of time"
    second=second
    seconds=seconds
    seesuggested="&eSee https://nucleuspowered.org/docs/permsecon.html for more on what Nucleus is not, and suggested plugins that work with Nucleus."
    sellto="sell to the server"
    status {
        expired="(Expired)"
    }
    time {
        am="{0}:{2} am ({1}:{2}h)"
        pm="{0}:{2} pm ({1}:{2}h)"
    }
    "true"="true"
    unknown=неизвестно
    view="[Смотреть]"
    walking=walking
    yesno {
        "false"=Нет
        "true"=Да
    }
}
startup {
    command {
        couldnotregister="&eThe command \"/{0}\" could not be registered and will not be available."
        fallback="&eThe command \"/{0}\" could not be registered - the fallback \"/{1}:{2}\" is available."
        noregisterplugin="&eThe command \"/{0}\" could not be registered as it has been claimed by {1}. It will not be available."
        plugin="&eThe command \"/{0}\" could not be registered as it has already been claimed by {1} - the fallback \"/{2}:{3}\" is available."
    }
    commandfailiure="The {0} command ({1}) was not registered due to an error. Nucleus will stop loading."
    completeinit="{0} has completed server initialisation tasks. Waiting for game server to start to complete the final tasks."
    gamestart="{0} is performing final tasks before server startup completes."
    init="{0} is now entering the init phase."
    injectablenotloaded="The {0} was not loaded because of a class construction error - but loading will continue."
    loaddata="{0} is loading data files."
    moduleloaded="{0} has completed loading modules."
    moduleloading="{0} is now loading and enabling modules. This may take a few seconds."
    modulenotloaded="{0} was unable to load modules and has aborted loading."
    nostart {
        compat="{0} cannot start on this server version (running on {1}, version {2})."
        compat2="Error was: {0}"
        compat3="{0} will not start up. Server will be whitelisted."
    }
    postinit="{0} is now entering the post-init phase."
    preinit="{0} is now starting. Entering pre-init phase."
    started="{0} has started."
    stopped="{0} is performing server shutdown tasks."
    welcome="&fStarting {0} version {1}, running on Sponge API {2}."
}
teleport {
    accept {
        hover="&aClick to accept (&e/tpaccept&a)"
    }
    cancelled="&cThe teleportation was cancelled."
    deny {
        hover="&cClick to deny (&e/tpdeny&c)"
    }
    fail {
        jailed="&e{0} &ccannot be teleported because they are jailed."
        offline="&cUnable to complete teleport because the target has gone offline."
        offlinenamed="&cUnable to complete teleport because {0} has gone offline."
        targettoggle="&cYou cannot target &e{0} &cas they have disabled being targeted for teleportation."
    }
    from {
        success="&e{0} &ateleported to your location."
    }
    nosafe="&cThe teleportation was cancelled - either due to a plugin or lack of a safe location."
    prep {
        cancel="&cThe teleportation was cancelled. Your &e{0} &chas been refunded."
    }
    success {
        source="&e{0} &cwas successfully teleported to &e{1}&c's location."
    }
    to {
        success="&aYou have teleported to &e{0}&a's location."
    }
    warmup="&aYou will teleport in &e{0}&a seconds. Do not move or run a command."
}
vanish {
    login="&aYou are currently vanished."
}
warmup {
    both="&aDo not move or run a command."
    cancel="&cYour warmup has been cancelled."
    end="&aCompleted warmup. Executing command."
    onCommand="&aDo not run a command."
    onMove="&aDo not move."
    start="&aWarmup started. Your command will be executed in &e{0}&a."
}
warn {
    login {
        notify="&e{0} &ahas &e{1} &aactive warning(s). To view &eclick this message."
        view="&aClick to view warnings for &e{0}."
    }
    playernotify {
        standard="&4Warning: &c{0}"
        time="&4Warning: &c{0} &7(expires in {1})"
    }
}
world {
    access {
        denied="&cYou do not have permission to access the world &e{0}&c."
    }
}
worldrepair {
    detected="&cWORLD UUID CHANGE DETECTED. The following worlds have changed UUID:"
    repair {
        fail="&cUnable to repair &e{0}"
        nouuid="&cCould not find a world with UUID {0} - it seems to have disappeared..."
        start="&cStarting repair. The server will shut down to complete this process."
        success="&aSuccessfully repaired &e{0}"
        try="&cTrying to repair &e{0}"
    }
    whitelist {
        cmd="&cThe whitelist has been enabled. If the server is restarted, the change will be permanent."
        cmd2="&cIf you want to fix the UUIDs, run &e/repairuuids &cfrom the console"
        nocmd="&cThe whitelist has been enabled. You will need to make any reversions manually."
    }
    worldlist="&e{0} &c({1} -> {2})"
}
